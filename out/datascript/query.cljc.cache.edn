;; Analyzed by ClojureScript 1.7.170
{:use-macros {raise datascript.db}, :excludes #{}, :name datascript.query, :imports nil, :requires {da datascript.arrays, set clojure.set, dpp datascript.pull-parser, dpa datascript.pull-api, walk clojure.walk, datascript.parser datascript.parser, db datascript.db, clojure.set clojure.set, datascript.lru datascript.lru, datascript.db datascript.db, datascript.pull-parser datascript.pull-parser, datascript.pull-api datascript.pull-api, de datascript.impl.entity, dp datascript.parser, cljs.reader cljs.reader, clojure.walk clojure.walk, edn cljs.reader, datascript.arrays datascript.arrays, datascript.impl.entity datascript.impl.entity}, :uses {Constant datascript.parser, BindIgnore datascript.parser, FindTuple datascript.parser, SrcVar datascript.parser, FindColl datascript.parser, BindTuple datascript.parser, BindColl datascript.parser, BindScalar datascript.parser, PlainSymbol datascript.parser, FindRel datascript.parser, FindScalar datascript.parser, RulesVar datascript.parser, Variable datascript.parser}, :defs {solve-rule {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 539, :column 7, :end-line 539, :end-column 17, :arglists (quote ([context clause]))}, :name datascript.query/solve-rule, :variadic false, :file "out/datascript/query.cljc", :end-column 17, :method-params ([context clause]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 539, :end-line 539, :max-fixed-arity 2, :fn-var true, :arglists (quote ([context clause]))}, matches-pattern? {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 369, :column 7, :end-line 369, :end-column 23, :arglists (quote ([pattern tuple]))}, :name datascript.query/matches-pattern?, :variadic false, :file "out/datascript/query.cljc", :end-column 23, :method-params ([pattern tuple]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 369, :end-line 369, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pattern tuple]))}, aggregate {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 709, :column 7, :end-line 709, :end-column 16, :arglists (quote ([find-elements context resultset]))}, :name datascript.query/aggregate, :variadic false, :file "out/datascript/query.cljc", :end-column 16, :method-params ([find-elements context resultset]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 709, :end-line 709, :max-fixed-arity 3, :fn-var true, :arglists (quote ([find-elements context resultset]))}, query-cache {:name datascript.query/query-cache, :file "out/datascript/query.cljc", :line 745, :column 1, :end-line 745, :end-column 27, :private true, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 745, :column 16, :end-line 745, :end-column 27, :private true}}, rel-prod-by-attrs {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 420, :column 8, :end-line 420, :end-column 25, :private true, :arglists (quote ([context attrs]))}, :private true, :name datascript.query/rel-prod-by-attrs, :variadic false, :file "out/datascript/query.cljc", :end-column 25, :method-params ([context attrs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 420, :end-line 420, :max-fixed-arity 2, :fn-var true, :arglists (quote ([context attrs]))}, empty-rel {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 240, :column 7, :end-line 240, :end-column 16, :arglists (quote ([binding]))}, :name datascript.query/empty-rel, :variadic false, :file "out/datascript/query.cljc", :end-column 16, :method-params ([binding]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 240, :end-line 240, :max-fixed-arity 1, :fn-var true, :arglists (quote ([binding]))}, built-ins {:name datascript.query/built-ins, :file "out/datascript/query.cljc", :line 153, :column 1, :end-line 153, :end-column 15, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 153, :column 6, :end-line 153, :end-column 15}}, pull {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 730, :column 8, :end-line 730, :end-column 12, :private true, :arglists (quote ([find-elements context resultset]))}, :private true, :name datascript.query/pull, :variadic false, :file "out/datascript/query.cljc", :end-column 12, :method-params ([find-elements context resultset]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 730, :end-line 730, :max-fixed-arity 3, :fn-var true, :arglists (quote ([find-elements context resultset]))}, ->Context {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 29, :column 12, :end-line 29, :end-column 19, :internal-ctor true, :factory :positional, :arglists (quote ([rels sources rules]))}, :name datascript.query/->Context, :variadic false, :file "out/datascript/query.cljc", :end-column 19, :method-params ([rels sources rules]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 29, :end-line 29, :max-fixed-arity 3, :fn-var true, :arglists (quote ([rels sources rules]))}, tuple-key-fn {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 315, :column 7, :end-line 315, :end-column 19, :arglists (quote ([getters]))}, :name datascript.query/tuple-key-fn, :variadic false, :file "out/datascript/query.cljc", :end-column 19, :method-params ([getters]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 315, :end-line 315, :max-fixed-arity 1, :fn-var true, :arglists (quote ([getters]))}, resolve-pattern-lookup-refs {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 595, :column 7, :end-line 595, :end-column 34, :arglists (quote ([source pattern]))}, :name datascript.query/resolve-pattern-lookup-refs, :variadic false, :file "out/datascript/query.cljc", :end-column 34, :method-params ([source pattern]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 595, :end-line 595, :max-fixed-arity 2, :fn-var true, :arglists (quote ([source pattern]))}, bind-by-fn {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 466, :column 7, :end-line 466, :end-column 17, :arglists (quote ([context clause]))}, :name datascript.query/bind-by-fn, :variadic false, :file "out/datascript/query.cljc", :end-column 17, :method-params ([context clause]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 466, :end-line 466, :max-fixed-arity 2, :fn-var true, :arglists (quote ([context clause]))}, resolve-in {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 282, :column 7, :end-line 282, :end-column 17, :arglists (quote ([context [binding value]]))}, :name datascript.query/resolve-in, :variadic false, :file "out/datascript/query.cljc", :end-column 17, :method-params ([context p__10629]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 282, :end-line 282, :max-fixed-arity 2, :fn-var true, :arglists (quote ([context [binding value]]))}, rule? {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 491, :column 7, :end-line 491, :end-column 12, :arglists (quote ([context clause]))}, :name datascript.query/rule?, :variadic false, :file "out/datascript/query.cljc", :end-column 12, :method-params ([context clause]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 491, :end-line 491, :max-fixed-arity 2, :fn-var true, :arglists (quote ([context clause]))}, source? {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 68, :column 7, :end-line 68, :end-column 14, :arglists (quote ([sym]))}, :name datascript.query/source?, :variadic false, :file "out/datascript/query.cljc", :end-column 14, :method-params ([sym]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 1, :fn-var true, :arglists (quote ([sym]))}, -q {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 644, :column 7, :end-line 644, :end-column 9, :arglists (quote ([context clauses]))}, :name datascript.query/-q, :variadic false, :file "out/datascript/query.cljc", :end-column 9, :method-params ([context clauses]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 644, :end-line 644, :max-fixed-arity 2, :fn-var true, :arglists (quote ([context clauses]))}, attr? {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 76, :column 7, :end-line 76, :end-column 12, :arglists (quote ([form]))}, :name datascript.query/attr?, :variadic false, :file "out/datascript/query.cljc", :end-column 12, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, -get-else {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 124, :column 8, :end-line 124, :end-column 17, :private true, :arglists (quote ([db e a else-val]))}, :private true, :name datascript.query/-get-else, :variadic false, :file "out/datascript/query.cljc", :end-column 17, :method-params ([db e a else-val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 124, :end-line 124, :max-fixed-arity 4, :fn-var true, :arglists (quote ([db e a else-val]))}, intersect-keys {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 41, :column 7, :end-line 41, :end-column 21, :arglists (quote ([attrs1 attrs2]))}, :name datascript.query/intersect-keys, :variadic false, :file "out/datascript/query.cljc", :end-column 21, :method-params ([attrs1 attrs2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 2, :fn-var true, :arglists (quote ([attrs1 attrs2]))}, or-fn {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 149, :column 8, :end-line 149, :end-column 13, :private true, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :private true, :name datascript.query/or-fn, :variadic true, :file "out/datascript/query.cljc", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 149, :end-line 149, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, rule-seqid {:name datascript.query/rule-seqid, :file "out/datascript/query.cljc", :line 498, :column 1, :end-line 498, :end-column 16, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 498, :column 6, :end-line 498, :end-column 16}}, -collect {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 647, :column 7, :end-line 647, :end-column 15, :arglists (quote ([context symbols] [acc rels symbols])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([context symbols] [acc rels symbols]), :arglists ([context symbols] [acc rels symbols]), :arglists-meta (nil nil)}}, :name datascript.query/-collect, :variadic false, :file "out/datascript/query.cljc", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([context symbols] [acc rels symbols]), :arglists ([context symbols] [acc rels symbols]), :arglists-meta (nil nil)}, :method-params ([context symbols] [acc rels symbols]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 647, :end-line 647, :max-fixed-arity 3, :fn-var true, :arglists ([context symbols] [acc rels symbols])}, q {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 754, :column 7, :end-line 754, :end-column 8, :arglists (quote ([q & inputs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(q inputs)], :arglists ([q & inputs]), :arglists-meta (nil)}}, :name datascript.query/q, :variadic true, :file "out/datascript/query.cljc", :end-column 8, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(q inputs)], :arglists ([q & inputs]), :arglists-meta (nil)}, :method-params [(q inputs)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 754, :end-line 754, :max-fixed-arity 1, :fn-var true, :arglists ([q & inputs])}, context-resolve-val {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 412, :column 8, :end-line 412, :end-column 27, :private true, :arglists (quote ([context sym]))}, :private true, :name datascript.query/context-resolve-val, :variadic false, :file "out/datascript/query.cljc", :end-column 27, :method-params ([context sym]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 412, :end-line 412, :max-fixed-arity 2, :fn-var true, :arglists (quote ([context sym]))}, walk-collect {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 528, :column 7, :end-line 528, :end-column 19, :arglists (quote ([form pred]))}, :name datascript.query/walk-collect, :variadic false, :file "out/datascript/query.cljc", :end-column 19, :method-params ([form pred]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 528, :end-line 528, :max-fixed-arity 2, :fn-var true, :arglists (quote ([form pred]))}, lookup-pattern-coll {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 380, :column 7, :end-line 380, :end-column 26, :arglists (quote ([coll pattern]))}, :name datascript.query/lookup-pattern-coll, :variadic false, :file "out/datascript/query.cljc", :end-column 26, :method-params ([coll pattern]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 380, :end-line 380, :max-fixed-arity 2, :fn-var true, :arglists (quote ([coll pattern]))}, IBinding {:meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 245, :column 14, :end-line 245, :end-column 22, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {in->rel [[binding value]]}}}, :protocol-symbol true, :name datascript.query/IBinding, :file "out/datascript/query.cljc", :end-column 22, :column 1, :line 245, :protocol-info {:methods {in->rel [[binding value]]}}, :info nil, :end-line 245, :impls #{datascript.parser/BindColl datascript.parser/BindIgnore datascript.parser/BindScalar datascript.parser/BindTuple}, :doc nil, :jsdoc ("@interface")}, IContextResolve {:meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 675, :column 14, :end-line 675, :end-column 29, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {-context-resolve [[var context]]}}}, :protocol-symbol true, :name datascript.query/IContextResolve, :file "out/datascript/query.cljc", :end-column 29, :column 1, :line 675, :protocol-info {:methods {-context-resolve [[var context]]}}, :info nil, :end-line 675, :impls #{datascript.parser/PlainSymbol datascript.parser/SrcVar datascript.parser/Constant datascript.parser/Variable}, :doc nil, :jsdoc ("@interface")}, rule-gen-guards {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 521, :column 7, :end-line 521, :end-column 22, :arglists (quote ([rule-clause used-args]))}, :name datascript.query/rule-gen-guards, :variadic false, :file "out/datascript/query.cljc", :end-column 22, :method-params ([rule-clause used-args]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 521, :end-line 521, :max-fixed-arity 2, :fn-var true, :arglists (quote ([rule-clause used-args]))}, resolve-ins {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 293, :column 7, :end-line 293, :end-column 18, :arglists (quote ([context bindings values]))}, :name datascript.query/resolve-ins, :variadic false, :file "out/datascript/query.cljc", :end-column 18, :method-params ([context bindings values]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 293, :end-line 293, :max-fixed-arity 3, :fn-var true, :arglists (quote ([context bindings values]))}, resolve-sym {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 446, :column 8, :end-line 446, :end-column 19, :private true, :arglists (quote ([sym]))}, :private true, :name datascript.query/resolve-sym, :variadic false, :file "out/datascript/query.cljc", :end-column 19, :method-params ([sym]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 446, :end-line 446, :max-fixed-arity 1, :fn-var true, :arglists (quote ([sym]))}, remove-pairs {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 515, :column 7, :end-line 515, :end-column 19, :arglists (quote ([xs ys]))}, :name datascript.query/remove-pairs, :variadic false, :file "out/datascript/query.cljc", :end-column 19, :method-params ([xs ys]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 515, :end-line 515, :max-fixed-arity 2, :fn-var true, :arglists (quote ([xs ys]))}, lru-cache-size {:name datascript.query/lru-cache-size, :file "out/datascript/query.cljc", :line 21, :column 1, :end-line 21, :end-column 28, :const true, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 21, :column 14, :end-line 21, :end-column 28, :const true}}, concatv {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 45, :column 7, :end-line 45, :end-column 14, :arglists (quote ([& xs])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(xs)], :arglists ([& xs]), :arglists-meta (nil)}}, :name datascript.query/concatv, :variadic true, :file "out/datascript/query.cljc", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(xs)], :arglists ([& xs]), :arglists-meta (nil)}, :method-params [(xs)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 0, :fn-var true, :arglists ([& xs])}, -missing? {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 141, :column 8, :end-line 141, :end-column 17, :private true, :arglists (quote ([db e a]))}, :private true, :name datascript.query/-missing?, :variadic false, :file "out/datascript/query.cljc", :end-column 17, :method-params ([db e a]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 141, :end-line 141, :max-fixed-arity 3, :fn-var true, :arglists (quote ([db e a]))}, rel-contains-attrs? {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 417, :column 8, :end-line 417, :end-column 27, :private true, :arglists (quote ([rel attrs]))}, :private true, :name datascript.query/rel-contains-attrs?, :variadic false, :file "out/datascript/query.cljc", :end-column 27, :method-params ([rel attrs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 417, :end-line 417, :max-fixed-arity 2, :fn-var true, :arglists (quote ([rel attrs]))}, prod-rel {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 100, :column 7, :end-line 100, :end-column 15, :arglists (quote ([] [rel1 rel2])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([] [rel1 rel2]), :arglists ([] [rel1 rel2]), :arglists-meta (nil nil)}}, :name datascript.query/prod-rel, :variadic false, :file "out/datascript/query.cljc", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([] [rel1 rel2]), :arglists ([] [rel1 rel2]), :arglists-meta (nil nil)}, :method-params ([] [rel1 rel2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 100, :end-line 100, :max-fixed-arity 2, :fn-var true, :arglists ([] [rel1 rel2])}, lookup-pattern {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 392, :column 7, :end-line 392, :end-column 21, :arglists (quote ([source pattern]))}, :name datascript.query/lookup-pattern, :variadic false, :file "out/datascript/query.cljc", :end-column 21, :method-params ([source pattern]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 392, :end-line 392, :max-fixed-arity 2, :fn-var true, :arglists (quote ([source pattern]))}, -aggregate {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 693, :column 7, :end-line 693, :end-column 17, :arglists (quote ([find-elements context tuples]))}, :name datascript.query/-aggregate, :variadic false, :file "out/datascript/query.cljc", :end-column 17, :method-params ([find-elements context tuples]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 693, :end-line 693, :max-fixed-arity 3, :fn-var true, :arglists (quote ([find-elements context tuples]))}, -resolve-clause {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 616, :column 7, :end-line 616, :end-column 22, :arglists (quote ([context clause]))}, :name datascript.query/-resolve-clause, :variadic false, :file "out/datascript/query.cljc", :end-column 22, :method-params ([context clause]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 616, :end-line 616, :max-fixed-arity 2, :fn-var true, :arglists (quote ([context clause]))}, *lookup-attrs* {:name datascript.query/*lookup-attrs*, :file "out/datascript/query.cljc", :line 298, :column 1, :end-line 298, :end-column 30, :dynamic true, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 298, :column 16, :end-line 298, :end-column 30, :dynamic true}}, ->Relation {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 36, :column 12, :end-line 36, :end-column 20, :internal-ctor true, :factory :positional, :arglists (quote ([attrs tuples]))}, :name datascript.query/->Relation, :variadic false, :file "out/datascript/query.cljc", :end-column 20, :method-params ([attrs tuples]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 36, :end-line 36, :max-fixed-arity 2, :fn-var true, :arglists (quote ([attrs tuples]))}, join-tuples {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 84, :column 7, :end-line 84, :end-column 18, :arglists (quote ([t1 idxs1 t2 idxs2]))}, :name datascript.query/join-tuples, :variadic false, :file "out/datascript/query.cljc", :end-column 18, :method-params ([t1 idxs1 t2 idxs2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 84, :end-line 84, :max-fixed-arity 4, :fn-var true, :arglists (quote ([t1 idxs1 t2 idxs2]))}, IPostProcess {:meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 717, :column 14, :end-line 717, :end-column 26, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {-post-process [[find tuples]]}}}, :protocol-symbol true, :name datascript.query/IPostProcess, :file "out/datascript/query.cljc", :end-column 26, :column 1, :line 717, :protocol-info {:methods {-post-process [[find tuples]]}}, :info nil, :end-line 717, :impls #{datascript.parser/FindScalar datascript.parser/FindRel datascript.parser/FindTuple datascript.parser/FindColl}, :doc nil, :jsdoc ("@interface")}, looks-like? {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 48, :column 8, :end-line 48, :end-column 19, :private true, :arglists (quote ([pattern form]))}, :private true, :name datascript.query/looks-like?, :variadic false, :file "out/datascript/query.cljc", :end-column 19, :method-params ([pattern form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pattern form]))}, dynamic-lookup-attrs {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 606, :column 7, :end-line 606, :end-column 27, :arglists (quote ([source pattern]))}, :name datascript.query/dynamic-lookup-attrs, :variadic false, :file "out/datascript/query.cljc", :end-column 27, :method-params ([source pattern]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 606, :end-line 606, :max-fixed-arity 2, :fn-var true, :arglists (quote ([source pattern]))}, lookup-ref? {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 79, :column 7, :end-line 79, :end-column 18, :arglists (quote ([form]))}, :name datascript.query/lookup-ref?, :variadic false, :file "out/datascript/query.cljc", :end-column 18, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, in->rel {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 246, :column 4, :end-line 246, :end-column 11, :protocol datascript.query/IBinding, :doc nil, :arglists (quote ([binding value]))}, :protocol datascript.query/IBinding, :name datascript.query/in->rel, :variadic false, :file "out/datascript/query.cljc", :end-column 11, :method-params ([binding value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 245, :end-line 246, :max-fixed-arity 2, :fn-var true, :arglists (quote ([binding value])), :doc nil}, -get-some {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 132, :column 8, :end-line 132, :end-column 17, :private true, :arglists (quote ([db e & as])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(db e as)], :arglists ([db e & as]), :arglists-meta (nil)}}, :private true, :name datascript.query/-get-some, :variadic true, :file "out/datascript/query.cljc", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(db e as)], :arglists ([db e & as]), :arglists-meta (nil)}, :method-params [(db e as)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 132, :end-line 132, :max-fixed-arity 2, :fn-var true, :arglists ([db e & as])}, expand-rule {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 500, :column 7, :end-line 500, :end-column 18, :arglists (quote ([clause context used-args]))}, :name datascript.query/expand-rule, :variadic false, :file "out/datascript/query.cljc", :end-column 18, :method-params ([clause context used-args]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 500, :end-line 500, :max-fixed-arity 3, :fn-var true, :arglists (quote ([clause context used-args]))}, resolve-clause {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 634, :column 7, :end-line 634, :end-column 21, :arglists (quote ([context clause]))}, :name datascript.query/resolve-clause, :variadic false, :file "out/datascript/query.cljc", :end-column 21, :method-params ([context clause]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 634, :end-line 634, :max-fixed-arity 2, :fn-var true, :arglists (quote ([context clause]))}, hash-join {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 332, :column 7, :end-line 332, :end-column 16, :arglists (quote ([rel1 rel2]))}, :name datascript.query/hash-join, :variadic false, :file "out/datascript/query.cljc", :end-column 16, :method-params ([rel1 rel2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 332, :end-line 332, :max-fixed-arity 2, :fn-var true, :arglists (quote ([rel1 rel2]))}, -call-fn {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 425, :column 7, :end-line 425, :end-column 15, :arglists (quote ([context rel f args]))}, :name datascript.query/-call-fn, :variadic false, :file "out/datascript/query.cljc", :end-column 15, :method-params ([context rel f args]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 425, :end-line 425, :max-fixed-arity 4, :fn-var true, :arglists (quote ([context rel f args]))}, parse-rules {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 236, :column 7, :end-line 236, :end-column 18, :arglists (quote ([rules]))}, :name datascript.query/parse-rules, :variadic false, :file "out/datascript/query.cljc", :end-column 18, :method-params ([rules]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 236, :end-line 236, :max-fixed-arity 1, :fn-var true, :arglists (quote ([rules]))}, memoized-parse-query {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 747, :column 7, :end-line 747, :end-column 27, :arglists (quote ([q]))}, :name datascript.query/memoized-parse-query, :variadic false, :file "out/datascript/query.cljc", :end-column 27, :method-params ([q]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 747, :end-line 747, :max-fixed-arity 1, :fn-var true, :arglists (quote ([q]))}, built-in-aggregates {:name datascript.query/built-in-aggregates, :file "out/datascript/query.cljc", :line 167, :column 1, :end-line 167, :end-column 25, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 167, :column 6, :end-line 167, :end-column 25}}, Context {:num-fields 3, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name datascript.query/Context, :file "out/datascript/query.cljc", :end-column 19, :type true, :column 12, :internal-ctor true, :line 29, :record true, :end-line 29, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, sum-rel {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 97, :column 7, :end-line 97, :end-column 14, :arglists (quote ([a b]))}, :name datascript.query/sum-rel, :variadic false, :file "out/datascript/query.cljc", :end-column 14, :method-params ([a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 97, :end-line 97, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a b]))}, rel-with-attr {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 409, :column 8, :end-line 409, :end-column 21, :private true, :arglists (quote ([context sym]))}, :private true, :name datascript.query/rel-with-attr, :variadic false, :file "out/datascript/query.cljc", :end-column 21, :method-params ([context sym]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 409, :end-line 409, :max-fixed-arity 2, :fn-var true, :arglists (quote ([context sym]))}, free-var? {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 72, :column 7, :end-line 72, :end-column 16, :arglists (quote ([sym]))}, :name datascript.query/free-var?, :variadic false, :file "out/datascript/query.cljc", :end-column 16, :method-params ([sym]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 1, :fn-var true, :arglists (quote ([sym]))}, map->Context {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 29, :column 12, :end-line 29, :end-column 19, :internal-ctor true, :factory :map, :arglists (quote ([G__10537]))}, :name datascript.query/map->Context, :variadic false, :file "out/datascript/query.cljc", :end-column 19, :method-params ([G__10537]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 29, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__10537]))}, -context-resolve {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 676, :column 4, :end-line 676, :end-column 20, :protocol datascript.query/IContextResolve, :doc nil, :arglists (quote ([var context]))}, :protocol datascript.query/IContextResolve, :name datascript.query/-context-resolve, :variadic false, :file "out/datascript/query.cljc", :end-column 20, :method-params ([var context]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 675, :end-line 676, :max-fixed-arity 2, :fn-var true, :arglists (quote ([var context])), :doc nil}, *lookup-source* {:name datascript.query/*lookup-source*, :file "out/datascript/query.cljc", :line 299, :column 1, :end-line 299, :end-column 31, :dynamic true, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 299, :column 16, :end-line 299, :end-column 31, :dynamic true}}, Relation {:num-fields 2, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name datascript.query/Relation, :file "out/datascript/query.cljc", :end-column 20, :type true, :column 12, :internal-ctor true, :line 36, :record true, :end-line 36, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, filter-by-pred {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 451, :column 7, :end-line 451, :end-column 21, :arglists (quote ([context clause]))}, :name datascript.query/filter-by-pred, :variadic false, :file "out/datascript/query.cljc", :end-column 21, :method-params ([context clause]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 451, :end-line 451, :max-fixed-arity 2, :fn-var true, :arglists (quote ([context clause]))}, split-guards {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 533, :column 7, :end-line 533, :end-column 19, :arglists (quote ([clauses guards]))}, :name datascript.query/split-guards, :variadic false, :file "out/datascript/query.cljc", :end-column 19, :method-params ([clauses guards]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 533, :end-line 533, :max-fixed-arity 2, :fn-var true, :arglists (quote ([clauses guards]))}, normalize-pattern-clause {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 387, :column 7, :end-line 387, :end-column 31, :arglists (quote ([clause]))}, :name datascript.query/normalize-pattern-clause, :variadic false, :file "out/datascript/query.cljc", :end-column 31, :method-params ([clause]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 387, :end-line 387, :max-fixed-arity 1, :fn-var true, :arglists (quote ([clause]))}, collect {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 670, :column 7, :end-line 670, :end-column 14, :arglists (quote ([context symbols]))}, :name datascript.query/collect, :variadic false, :file "out/datascript/query.cljc", :end-column 14, :method-params ([context symbols]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 670, :end-line 670, :max-fixed-arity 2, :fn-var true, :arglists (quote ([context symbols]))}, map->Relation {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 36, :column 12, :end-line 36, :end-column 20, :internal-ctor true, :factory :map, :arglists (quote ([G__10545]))}, :name datascript.query/map->Relation, :variadic false, :file "out/datascript/query.cljc", :end-column 20, :method-params ([G__10545]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__10545]))}, -differ? {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 120, :column 8, :end-line 120, :end-column 16, :private true, :arglists (quote ([& xs])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(xs)], :arglists ([& xs]), :arglists-meta (nil)}}, :private true, :name datascript.query/-differ?, :variadic true, :file "out/datascript/query.cljc", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(xs)], :arglists ([& xs]), :arglists-meta (nil)}, :method-params [(xs)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 120, :end-line 120, :max-fixed-arity 0, :fn-var true, :arglists ([& xs])}, hash-attrs {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 323, :column 7, :end-line 323, :end-column 17, :arglists (quote ([key-fn tuples]))}, :name datascript.query/hash-attrs, :variadic false, :file "out/datascript/query.cljc", :end-column 17, :method-params ([key-fn tuples]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 323, :end-line 323, :max-fixed-arity 2, :fn-var true, :arglists (quote ([key-fn tuples]))}, lookup-pattern-db {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 360, :column 7, :end-line 360, :end-column 24, :arglists (quote ([db pattern]))}, :name datascript.query/lookup-pattern-db, :variadic false, :file "out/datascript/query.cljc", :end-column 24, :method-params ([db pattern]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 360, :end-line 360, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db pattern]))}, -post-process {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 718, :column 4, :end-line 718, :end-column 17, :protocol datascript.query/IPostProcess, :doc nil, :arglists (quote ([find tuples]))}, :protocol datascript.query/IPostProcess, :name datascript.query/-post-process, :variadic false, :file "out/datascript/query.cljc", :end-column 17, :method-params ([find tuples]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 717, :end-line 718, :max-fixed-arity 2, :fn-var true, :arglists (quote ([find tuples])), :doc nil}, and-fn {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 145, :column 8, :end-line 145, :end-column 14, :private true, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :private true, :name datascript.query/and-fn, :variadic true, :file "out/datascript/query.cljc", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 145, :end-line 145, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, collapse-rels {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 399, :column 7, :end-line 399, :end-column 20, :arglists (quote ([rels new-rel]))}, :name datascript.query/collapse-rels, :variadic false, :file "out/datascript/query.cljc", :end-column 20, :method-params ([rels new-rel]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 399, :end-line 399, :max-fixed-arity 2, :fn-var true, :arglists (quote ([rels new-rel]))}, idxs-of {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 705, :column 8, :end-line 705, :end-column 15, :private true, :arglists (quote ([pred coll]))}, :private true, :name datascript.query/idxs-of, :variadic false, :file "out/datascript/query.cljc", :end-column 15, :method-params ([pred coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 705, :end-line 705, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pred coll]))}, getter-fn {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/query.cljc", :line 301, :column 7, :end-line 301, :end-column 16, :arglists (quote ([attrs attr]))}, :name datascript.query/getter-fn, :variadic false, :file "out/datascript/query.cljc", :end-column 16, :method-params ([attrs attr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 301, :end-line 301, :max-fixed-arity 2, :fn-var true, :arglists (quote ([attrs attr]))}}, :require-macros {db datascript.db, datascript.db datascript.db, da datascript.arrays, datascript.arrays datascript.arrays, dp datascript.parser, datascript.parser datascript.parser}, :cljs.analyzer/constants {:seen #{:used-args :args contains? :find subs set get-else println-str :tuples namespace = rand-int dec :where :v :fn < :variable re-seq some? range sum :else pos? neg? tuples :bindings :symbol :sources <= :query/binding * min prn-str :value :prefix-context get-some identity meta empty? quot stddev not= ground rand > :source even? _ :rules pr-str sources mod - or name :rels zero? :binding rem nil? variance :var re-find not type identical? $ :with :pending-guards true? rules / vector >= not-empty distinct :attrs sample :error re-matches array-map rels :clauses odd? :form inc list + missing? median str hash-map false? max :query/where != == count :prefix-clauses -differ? compare complement count-distinct and :a print-str attrs avg :in :pattern}, :order [:rels :sources :rules rels sources rules :attrs :tuples attrs tuples _ * :else :error :query/where :v :a true? and odd? get-else >= print-str > count get-some nil? inc / quot false? not identity -differ? re-seq <= = min + name missing? ground rand-int complement == hash-map compare range max empty? pr-str println-str meta zero? != prn-str dec vector not= str < namespace - some? pos? rand re-matches list contains? subs mod array-map rem even? type neg? not-empty or identical? set re-find variance median sum count-distinct distinct avg stddev sample :symbol :variable :value :binding :query/binding :bindings $ :form :var :prefix-clauses :prefix-context :clauses :used-args :pending-guards :fn :args :source :pattern :find :with :where :in]}, :doc nil}