;; Analyzed by ClojureScript 1.7.170
{:use-macros {raise datascript.db, deftrecord datascript.parser}, :excludes #{distinct?}, :name datascript.parser, :imports nil, :requires {set clojure.set, clojure.set clojure.set, db datascript.db, datascript.db datascript.db}, :uses nil, :defs {->Predicate {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 404, :column 13, :end-line 404, :end-column 22, :internal-ctor true, :factory :positional, :arglists (quote ([fn args]))}, :name datascript.parser/->Predicate, :variadic false, :file "out/datascript/parser.cljc", :end-column 22, :method-params ([fn args]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 404, :end-line 404, :max-fixed-arity 2, :fn-var true, :arglists (quote ([fn args]))}, aggregate? {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 271, :column 7, :end-line 271, :end-column 17, :arglists (quote ([element]))}, :name datascript.parser/aggregate?, :variadic false, :file "out/datascript/parser.cljc", :end-column 17, :method-params ([element]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 271, :end-line 271, :max-fixed-arity 1, :fn-var true, :arglists (quote ([element]))}, ->DefaultSrc {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 93, :column 13, :end-line 93, :end-column 23, :internal-ctor true, :factory :positional, :arglists (quote ([]))}, :name datascript.parser/->DefaultSrc, :variadic false, :file "out/datascript/parser.cljc", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 93, :end-line 93, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, validate-join-vars {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 492, :column 8, :end-line 492, :end-column 26, :private true, :arglists (quote ([vars clauses form]))}, :private true, :name datascript.parser/validate-join-vars, :variadic false, :file "out/datascript/parser.cljc", :end-column 26, :method-params ([vars clauses form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 492, :end-line 492, :max-fixed-arity 3, :fn-var true, :arglists (quote ([vars clauses form]))}, parse-find-elem {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 320, :column 7, :end-line 320, :end-column 22, :arglists (quote ([form]))}, :name datascript.parser/parse-find-elem, :variadic false, :file "out/datascript/parser.cljc", :end-column 22, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 320, :end-line 320, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, IFindVars {:meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 240, :column 14, :end-line 240, :end-column 23, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {-find-vars [[this]]}}}, :protocol-symbol true, :name datascript.parser/IFindVars, :file "out/datascript/parser.cljc", :end-column 23, :column 1, :line 240, :protocol-info {:methods {-find-vars [[this]]}}, :info nil, :end-line 240, :impls #{datascript.parser/Variable datascript.parser/Pull datascript.parser/Aggregate}, :doc nil, :jsdoc ("@interface")}, postwalk {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 67, :column 7, :end-line 67, :end-column 15, :arglists (quote ([form f]))}, :name datascript.parser/postwalk, :variadic false, :file "out/datascript/parser.cljc", :end-column 15, :method-params ([form f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 2, :fn-var true, :arglists (quote ([form f]))}, ->And {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 409, :column 13, :end-line 409, :end-column 16, :internal-ctor true, :factory :positional, :arglists (quote ([clauses]))}, :name datascript.parser/->And, :variadic false, :file "out/datascript/parser.cljc", :end-column 16, :method-params ([clauses]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 409, :end-line 409, :max-fixed-arity 1, :fn-var true, :arglists (quote ([clauses]))}, parse-constant {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 117, :column 7, :end-line 117, :end-column 21, :arglists (quote ([form]))}, :name datascript.parser/parse-constant, :variadic false, :file "out/datascript/parser.cljc", :end-column 21, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 117, :end-line 117, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, ->Query {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 680, :column 13, :end-line 680, :end-column 18, :internal-ctor true, :factory :positional, :arglists (quote ([find with in where]))}, :name datascript.parser/->Query, :variadic false, :file "out/datascript/parser.cljc", :end-column 18, :method-params ([find with in where]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 680, :end-line 680, :max-fixed-arity 4, :fn-var true, :arglists (quote ([find with in where]))}, And {:num-fields 1, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable datascript.parser/ITraversable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name datascript.parser/And, :file "out/datascript/parser.cljc", :end-column 16, :type true, :column 13, :internal-ctor true, :line 409, :record true, :end-line 409, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, RuleBranch {:num-fields 2, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable datascript.parser/ITraversable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name datascript.parser/RuleBranch, :file "out/datascript/parser.cljc", :end-column 23, :type true, :column 13, :internal-ctor true, :line 626, :record true, :end-line 626, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->Or {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 408, :column 13, :end-line 408, :end-column 15, :internal-ctor true, :factory :positional, :arglists (quote ([source rule-vars clauses]))}, :name datascript.parser/->Or, :variadic false, :file "out/datascript/parser.cljc", :end-column 15, :method-params ([source rule-vars clauses]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 408, :end-line 408, :max-fixed-arity 3, :fn-var true, :arglists (quote ([source rule-vars clauses]))}, flatten-rule-vars {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 164, :column 7, :end-line 164, :end-column 24, :arglists (quote ([rule-vars]))}, :name datascript.parser/flatten-rule-vars, :variadic false, :file "out/datascript/parser.cljc", :end-column 24, :method-params ([rule-vars]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 164, :end-line 164, :max-fixed-arity 1, :fn-var true, :arglists (quote ([rule-vars]))}, map->Or {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 408, :column 13, :end-line 408, :end-column 15, :internal-ctor true, :factory :map, :arglists (quote ([G__9965]))}, :name datascript.parser/map->Or, :variadic false, :file "out/datascript/parser.cljc", :end-column 15, :method-params ([G__9965]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 408, :end-line 408, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__9965]))}, -collect-vars {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 18, :column 4, :end-line 18, :end-column 17, :protocol datascript.parser/ITraversable, :doc nil, :arglists (quote ([_ acc]))}, :protocol datascript.parser/ITraversable, :name datascript.parser/-collect-vars, :variadic false, :file "out/datascript/parser.cljc", :end-column 17, :method-params ([_ acc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 18, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ acc])), :doc nil}, validate-arity {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 658, :column 7, :end-line 658, :end-column 21, :arglists (quote ([name branches]))}, :name datascript.parser/validate-arity, :variadic false, :file "out/datascript/parser.cljc", :end-column 21, :method-params ([name branches]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 658, :end-line 658, :max-fixed-arity 2, :fn-var true, :arglists (quote ([name branches]))}, ->Placeholder {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 90, :column 13, :end-line 90, :end-column 24, :internal-ctor true, :factory :positional, :arglists (quote ([]))}, :name datascript.parser/->Placeholder, :variadic false, :file "out/datascript/parser.cljc", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 90, :end-line 90, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, ->BindIgnore {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 180, :column 13, :end-line 180, :end-column 23, :internal-ctor true, :factory :positional, :arglists (quote ([]))}, :name datascript.parser/->BindIgnore, :variadic false, :file "out/datascript/parser.cljc", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 180, :end-line 180, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, parse-not-join {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 516, :column 7, :end-line 516, :end-column 21, :arglists (quote ([form]))}, :name datascript.parser/parse-not-join, :variadic false, :file "out/datascript/parser.cljc", :end-column 21, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 516, :end-line 516, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, validate-vars {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 629, :column 7, :end-line 629, :end-column 20, :arglists (quote ([vars clauses form]))}, :name datascript.parser/validate-vars, :variadic false, :file "out/datascript/parser.cljc", :end-column 20, :method-params ([vars clauses form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 629, :end-line 629, :max-fixed-arity 3, :fn-var true, :arglists (quote ([vars clauses form]))}, parse-bind-scalar {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 189, :column 7, :end-line 189, :end-column 24, :arglists (quote ([form]))}, :name datascript.parser/parse-bind-scalar, :variadic false, :file "out/datascript/parser.cljc", :end-column 24, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 189, :end-line 189, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, parse-pred {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 441, :column 7, :end-line 441, :end-column 17, :arglists (quote ([form]))}, :name datascript.parser/parse-pred, :variadic false, :file "out/datascript/parser.cljc", :end-column 17, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 441, :end-line 441, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, parse-query {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 734, :column 7, :end-line 734, :end-column 18, :arglists (quote ([q]))}, :name datascript.parser/parse-query, :variadic false, :file "out/datascript/parser.cljc", :end-column 18, :method-params ([q]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 734, :end-line 734, :max-fixed-arity 1, :fn-var true, :arglists (quote ([q]))}, map->Aggregate {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 247, :column 13, :end-line 247, :end-column 22, :internal-ctor true, :factory :map, :arglists (quote ([G__9830]))}, :name datascript.parser/map->Aggregate, :variadic false, :file "out/datascript/parser.cljc", :end-column 22, :method-params ([G__9830]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 247, :end-line 247, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__9830]))}, map->DefaultSrc {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 93, :column 13, :end-line 93, :end-column 23, :internal-ctor true, :factory :map, :arglists (quote ([G__9729]))}, :name datascript.parser/map->DefaultSrc, :variadic false, :file "out/datascript/parser.cljc", :end-column 23, :method-params ([G__9729]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 93, :end-line 93, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__9729]))}, parse-find-coll {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 331, :column 7, :end-line 331, :end-column 22, :arglists (quote ([form]))}, :name datascript.parser/parse-find-coll, :variadic false, :file "out/datascript/parser.cljc", :end-column 22, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 331, :end-line 331, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, parse-pull-expr {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 301, :column 7, :end-line 301, :end-column 22, :arglists (quote ([form]))}, :name datascript.parser/parse-pull-expr, :variadic false, :file "out/datascript/parser.cljc", :end-column 22, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 301, :end-line 301, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, map->Function {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 405, :column 13, :end-line 405, :end-column 21, :internal-ctor true, :factory :map, :arglists (quote ([G__9932]))}, :name datascript.parser/map->Function, :variadic false, :file "out/datascript/parser.cljc", :end-column 21, :method-params ([G__9932]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 405, :end-line 405, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__9932]))}, pull? {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 274, :column 7, :end-line 274, :end-column 12, :arglists (quote ([element]))}, :name datascript.parser/pull?, :variadic false, :file "out/datascript/parser.cljc", :end-column 12, :method-params ([element]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 274, :end-line 274, :max-fixed-arity 1, :fn-var true, :arglists (quote ([element]))}, parse-rule-expr {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 455, :column 7, :end-line 455, :end-column 22, :arglists (quote ([form]))}, :name datascript.parser/parse-rule-expr, :variadic false, :file "out/datascript/parser.cljc", :end-column 22, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 455, :end-line 455, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, parse-bind-tuple {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 205, :column 7, :end-line 205, :end-column 23, :arglists (quote ([form]))}, :name datascript.parser/parse-bind-tuple, :variadic false, :file "out/datascript/parser.cljc", :end-column 23, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 205, :end-line 205, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, map->BindScalar {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 181, :column 13, :end-line 181, :end-column 23, :internal-ctor true, :factory :map, :arglists (quote ([G__9797]))}, :name datascript.parser/map->BindScalar, :variadic false, :file "out/datascript/parser.cljc", :end-column 23, :method-params ([G__9797]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 181, :end-line 181, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__9797]))}, parse-or-join {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 558, :column 7, :end-line 558, :end-column 20, :arglists (quote ([form]))}, :name datascript.parser/parse-or-join, :variadic false, :file "out/datascript/parser.cljc", :end-column 20, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 558, :end-line 558, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, ->Not {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 407, :column 13, :end-line 407, :end-column 16, :internal-ctor true, :factory :positional, :arglists (quote ([source vars clauses]))}, :name datascript.parser/->Not, :variadic false, :file "out/datascript/parser.cljc", :end-column 16, :method-params ([source vars clauses]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 407, :end-line 407, :max-fixed-arity 3, :fn-var true, :arglists (quote ([source vars clauses]))}, map->BindTuple {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 182, :column 13, :end-line 182, :end-column 22, :internal-ctor true, :factory :map, :arglists (quote ([G__9808]))}, :name datascript.parser/map->BindTuple, :variadic false, :file "out/datascript/parser.cljc", :end-column 22, :method-params ([G__9808]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 182, :end-line 182, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__9808]))}, Constant {:num-fields 1, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable datascript.parser/ITraversable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name datascript.parser/Constant, :file "out/datascript/parser.cljc", :end-column 21, :type true, :column 13, :internal-ctor true, :line 95, :record true, :end-line 95, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, map->Not {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 407, :column 13, :end-line 407, :end-column 16, :internal-ctor true, :factory :map, :arglists (quote ([G__9954]))}, :name datascript.parser/map->Not, :variadic false, :file "out/datascript/parser.cljc", :end-column 16, :method-params ([G__9954]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 407, :end-line 407, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__9954]))}, map->FindRel {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 256, :column 13, :end-line 256, :end-column 20, :internal-ctor true, :factory :map, :arglists (quote ([G__9852]))}, :name datascript.parser/map->FindRel, :variadic false, :file "out/datascript/parser.cljc", :end-column 20, :method-params ([G__9852]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 256, :end-line 256, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__9852]))}, map->Predicate {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 404, :column 13, :end-line 404, :end-column 22, :internal-ctor true, :factory :map, :arglists (quote ([G__9921]))}, :name datascript.parser/map->Predicate, :variadic false, :file "out/datascript/parser.cljc", :end-column 22, :method-params ([G__9921]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 404, :end-line 404, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__9921]))}, map->Pattern {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 403, :column 13, :end-line 403, :end-column 20, :internal-ctor true, :factory :map, :arglists (quote ([G__9910]))}, :name datascript.parser/map->Pattern, :variadic false, :file "out/datascript/parser.cljc", :end-column 20, :method-params ([G__9910]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 403, :end-line 403, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__9910]))}, Function {:num-fields 3, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable datascript.parser/ITraversable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name datascript.parser/Function, :file "out/datascript/parser.cljc", :end-column 21, :type true, :column 13, :internal-ctor true, :line 405, :record true, :end-line 405, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, BindIgnore {:num-fields 0, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable datascript.parser/ITraversable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name datascript.parser/BindIgnore, :file "out/datascript/parser.cljc", :end-column 23, :type true, :column 13, :internal-ctor true, :line 180, :record true, :end-line 180, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, -collect {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 17, :column 4, :end-line 17, :end-column 12, :protocol datascript.parser/ITraversable, :doc nil, :arglists (quote ([_ pred acc]))}, :protocol datascript.parser/ITraversable, :name datascript.parser/-collect, :variadic false, :file "out/datascript/parser.cljc", :end-column 12, :method-params ([_ pred acc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 17, :max-fixed-arity 3, :fn-var true, :arglists (quote ([_ pred acc])), :doc nil}, find-elements {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 254, :column 4, :end-line 254, :end-column 17, :protocol datascript.parser/IFindElements, :doc nil, :arglists (quote ([this]))}, :protocol datascript.parser/IFindElements, :name datascript.parser/find-elements, :variadic false, :file "out/datascript/parser.cljc", :end-column 17, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 253, :end-line 254, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc nil}, parse-binding {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 218, :column 7, :end-line 218, :end-column 20, :arglists (quote ([form]))}, :name datascript.parser/parse-binding, :variadic false, :file "out/datascript/parser.cljc", :end-column 20, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 218, :end-line 218, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, ->PlainSymbol {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 96, :column 13, :end-line 96, :end-column 24, :internal-ctor true, :factory :positional, :arglists (quote ([symbol]))}, :name datascript.parser/->PlainSymbol, :variadic false, :file "out/datascript/parser.cljc", :end-column 24, :method-params ([symbol]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 96, :end-line 96, :max-fixed-arity 1, :fn-var true, :arglists (quote ([symbol]))}, ->Function {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 405, :column 13, :end-line 405, :end-column 21, :internal-ctor true, :factory :positional, :arglists (quote ([fn args binding]))}, :name datascript.parser/->Function, :variadic false, :file "out/datascript/parser.cljc", :end-column 21, :method-params ([fn args binding]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 405, :end-line 405, :max-fixed-arity 3, :fn-var true, :arglists (quote ([fn args binding]))}, -postwalk {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 19, :column 4, :end-line 19, :end-column 13, :protocol datascript.parser/ITraversable, :doc nil, :arglists (quote ([_ f]))}, :protocol datascript.parser/ITraversable, :name datascript.parser/-postwalk, :variadic false, :file "out/datascript/parser.cljc", :end-column 13, :method-params ([_ f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 19, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ f])), :doc nil}, Rule {:num-fields 2, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable datascript.parser/ITraversable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name datascript.parser/Rule, :file "out/datascript/parser.cljc", :end-column 17, :type true, :column 13, :internal-ctor true, :line 627, :record true, :end-line 627, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, parse-pattern-el {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 412, :column 7, :end-line 412, :end-column 23, :arglists (quote ([form]))}, :name datascript.parser/parse-pattern-el, :variadic false, :file "out/datascript/parser.cljc", :end-column 23, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 412, :end-line 412, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, map->Variable {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 91, :column 13, :end-line 91, :end-column 21, :internal-ctor true, :factory :map, :arglists (quote ([G__9707]))}, :name datascript.parser/map->Variable, :variadic false, :file "out/datascript/parser.cljc", :end-column 21, :method-params ([G__9707]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 91, :end-line 91, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__9707]))}, take-source {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 417, :column 7, :end-line 417, :end-column 18, :arglists (quote ([form]))}, :name datascript.parser/take-source, :variadic false, :file "out/datascript/parser.cljc", :end-column 18, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 417, :end-line 417, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, parse-clauses {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 613, :column 7, :end-line 613, :end-column 20, :arglists (quote ([clauses]))}, :name datascript.parser/parse-clauses, :variadic false, :file "out/datascript/parser.cljc", :end-column 20, :method-params ([clauses]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 613, :end-line 613, :max-fixed-arity 1, :fn-var true, :arglists (quote ([clauses]))}, ->Rule {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 627, :column 13, :end-line 627, :end-column 17, :internal-ctor true, :factory :positional, :arglists (quote ([name branches]))}, :name datascript.parser/->Rule, :variadic false, :file "out/datascript/parser.cljc", :end-column 17, :method-params ([name branches]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 627, :end-line 627, :max-fixed-arity 2, :fn-var true, :arglists (quote ([name branches]))}, parse-and {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 538, :column 7, :end-line 538, :end-column 16, :arglists (quote ([form]))}, :name datascript.parser/parse-and, :variadic false, :file "out/datascript/parser.cljc", :end-column 16, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 538, :end-line 538, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, parse-placeholder {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 99, :column 7, :end-line 99, :end-column 24, :arglists (quote ([form]))}, :name datascript.parser/parse-placeholder, :variadic false, :file "out/datascript/parser.cljc", :end-column 24, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 99, :end-line 99, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, parse-aggregate-custom {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 287, :column 7, :end-line 287, :end-column 29, :arglists (quote ([form]))}, :name datascript.parser/parse-aggregate-custom, :variadic false, :file "out/datascript/parser.cljc", :end-column 29, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 287, :end-line 287, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, map->RuleExpr {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 406, :column 13, :end-line 406, :end-column 21, :internal-ctor true, :factory :map, :arglists (quote ([G__9943]))}, :name datascript.parser/map->RuleExpr, :variadic false, :file "out/datascript/parser.cljc", :end-column 21, :method-params ([G__9943]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 406, :end-line 406, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__9943]))}, parse-in {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 383, :column 7, :end-line 383, :end-column 15, :arglists (quote ([form]))}, :name datascript.parser/parse-in, :variadic false, :file "out/datascript/parser.cljc", :end-column 15, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 383, :end-line 383, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, map->RuleVars {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 145, :column 13, :end-line 145, :end-column 21, :internal-ctor true, :factory :map, :arglists (quote ([G__9773]))}, :name datascript.parser/map->RuleVars, :variadic false, :file "out/datascript/parser.cljc", :end-column 21, :method-params ([G__9773]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 145, :end-line 145, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__9773]))}, map->FindTuple {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 265, :column 13, :end-line 265, :end-column 22, :internal-ctor true, :factory :map, :arglists (quote ([G__9885]))}, :name datascript.parser/map->FindTuple, :variadic false, :file "out/datascript/parser.cljc", :end-column 22, :method-params ([G__9885]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 265, :end-line 265, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__9885]))}, FindTuple {:num-fields 1, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable datascript.parser/ITraversable cljs.core/IWithMeta cljs.core/IAssociative datascript.parser/IFindElements cljs.core/IMap cljs.core/ILookup}, :name datascript.parser/FindTuple, :file "out/datascript/parser.cljc", :end-column 22, :type true, :column 13, :internal-ctor true, :line 265, :record true, :end-line 265, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->Aggregate {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 247, :column 13, :end-line 247, :end-column 22, :internal-ctor true, :factory :positional, :arglists (quote ([fn args]))}, :name datascript.parser/->Aggregate, :variadic false, :file "out/datascript/parser.cljc", :end-column 22, :method-params ([fn args]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 247, :end-line 247, :max-fixed-arity 2, :fn-var true, :arglists (quote ([fn args]))}, Or {:num-fields 3, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable datascript.parser/ITraversable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name datascript.parser/Or, :file "out/datascript/parser.cljc", :end-column 15, :type true, :column 13, :internal-ctor true, :line 408, :record true, :end-line 408, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, DefaultSrc {:num-fields 0, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable datascript.parser/ITraversable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name datascript.parser/DefaultSrc, :file "out/datascript/parser.cljc", :end-column 23, :type true, :column 13, :internal-ctor true, :line 93, :record true, :end-line 93, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, parse-fn-arg {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 137, :column 7, :end-line 137, :end-column 19, :arglists (quote ([form]))}, :name datascript.parser/parse-fn-arg, :variadic false, :file "out/datascript/parser.cljc", :end-column 19, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 137, :end-line 137, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, map->Query {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 680, :column 13, :end-line 680, :end-column 18, :internal-ctor true, :factory :map, :arglists (quote ([G__10130]))}, :name datascript.parser/map->Query, :variadic false, :file "out/datascript/parser.cljc", :end-column 18, :method-params ([G__10130]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 680, :end-line 680, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__10130]))}, parse-not {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 505, :column 7, :end-line 505, :end-column 16, :arglists (quote ([form]))}, :name datascript.parser/parse-not, :variadic false, :file "out/datascript/parser.cljc", :end-column 16, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 505, :end-line 505, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, collect-vars {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 486, :column 8, :end-line 486, :end-column 20, :private true, :arglists (quote ([form]))}, :private true, :name datascript.parser/collect-vars, :variadic false, :file "out/datascript/parser.cljc", :end-column 20, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 486, :end-line 486, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, map->And {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 409, :column 13, :end-line 409, :end-column 16, :internal-ctor true, :factory :map, :arglists (quote ([G__9976]))}, :name datascript.parser/map->And, :variadic false, :file "out/datascript/parser.cljc", :end-column 16, :method-params ([G__9976]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 409, :end-line 409, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__9976]))}, validate-or {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 529, :column 7, :end-line 529, :end-column 18, :arglists (quote ([clause form]))}, :name datascript.parser/validate-or, :variadic false, :file "out/datascript/parser.cljc", :end-column 18, :method-params ([clause form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 529, :end-line 529, :max-fixed-arity 2, :fn-var true, :arglists (quote ([clause form]))}, Predicate {:num-fields 2, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable datascript.parser/ITraversable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name datascript.parser/Predicate, :file "out/datascript/parser.cljc", :end-column 22, :type true, :column 13, :internal-ctor true, :line 404, :record true, :end-line 404, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->FindTuple {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 265, :column 13, :end-line 265, :end-column 22, :internal-ctor true, :factory :positional, :arglists (quote ([elements]))}, :name datascript.parser/->FindTuple, :variadic false, :file "out/datascript/parser.cljc", :end-column 22, :method-params ([elements]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 265, :end-line 265, :max-fixed-arity 1, :fn-var true, :arglists (quote ([elements]))}, parse-rule {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 637, :column 7, :end-line 637, :end-column 17, :arglists (quote ([form]))}, :name datascript.parser/parse-rule, :variadic false, :file "out/datascript/parser.cljc", :end-column 17, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 637, :end-line 637, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, collect-vars-distinct {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 489, :column 7, :end-line 489, :end-column 28, :arglists (quote ([form]))}, :name datascript.parser/collect-vars-distinct, :variadic false, :file "out/datascript/parser.cljc", :end-column 28, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 489, :end-line 489, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, Pull {:num-fields 3, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable datascript.parser/IFindVars cljs.core/IPrintWithWriter cljs.core/IIterable datascript.parser/ITraversable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name datascript.parser/Pull, :file "out/datascript/parser.cljc", :end-column 17, :type true, :column 13, :internal-ctor true, :line 250, :record true, :end-line 250, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, Placeholder {:num-fields 0, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable datascript.parser/ITraversable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name datascript.parser/Placeholder, :file "out/datascript/parser.cljc", :end-column 24, :type true, :column 13, :internal-ctor true, :line 90, :record true, :end-line 90, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, SrcVar {:num-fields 1, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable datascript.parser/ITraversable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name datascript.parser/SrcVar, :file "out/datascript/parser.cljc", :end-column 19, :type true, :column 13, :internal-ctor true, :line 92, :record true, :end-line 92, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, parse-fn {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 447, :column 7, :end-line 447, :end-column 15, :arglists (quote ([form]))}, :name datascript.parser/parse-fn, :variadic false, :file "out/datascript/parser.cljc", :end-column 15, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 447, :end-line 447, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, FindColl {:num-fields 1, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable datascript.parser/ITraversable cljs.core/IWithMeta cljs.core/IAssociative datascript.parser/IFindElements cljs.core/IMap cljs.core/ILookup}, :name datascript.parser/FindColl, :file "out/datascript/parser.cljc", :end-column 21, :type true, :column 13, :internal-ctor true, :line 259, :record true, :end-line 259, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, map->PlainSymbol {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 96, :column 13, :end-line 96, :end-column 24, :internal-ctor true, :factory :map, :arglists (quote ([G__9762]))}, :name datascript.parser/map->PlainSymbol, :variadic false, :file "out/datascript/parser.cljc", :end-column 24, :method-params ([G__9762]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 96, :end-line 96, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__9762]))}, BindTuple {:num-fields 1, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable datascript.parser/ITraversable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name datascript.parser/BindTuple, :file "out/datascript/parser.cljc", :end-column 22, :type true, :column 13, :internal-ctor true, :line 182, :record true, :end-line 182, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, Not {:num-fields 3, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable datascript.parser/ITraversable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name datascript.parser/Not, :file "out/datascript/parser.cljc", :end-column 16, :type true, :column 13, :internal-ctor true, :line 407, :record true, :end-line 407, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, parse-where {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 616, :column 7, :end-line 616, :end-column 18, :arglists (quote ([form]))}, :name datascript.parser/parse-where, :variadic false, :file "out/datascript/parser.cljc", :end-column 18, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 616, :end-line 616, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, find-vars {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 268, :column 7, :end-line 268, :end-column 16, :arglists (quote ([find]))}, :name datascript.parser/find-vars, :variadic false, :file "out/datascript/parser.cljc", :end-column 16, :method-params ([find]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 268, :end-line 268, :max-fixed-arity 1, :fn-var true, :arglists (quote ([find]))}, validate-not {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 501, :column 8, :end-line 501, :end-column 20, :private true, :arglists (quote ([clause form]))}, :private true, :name datascript.parser/validate-not, :variadic false, :file "out/datascript/parser.cljc", :end-column 20, :method-params ([clause form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 501, :end-line 501, :max-fixed-arity 2, :fn-var true, :arglists (quote ([clause form]))}, map->Constant {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 95, :column 13, :end-line 95, :end-column 21, :internal-ctor true, :factory :map, :arglists (quote ([G__9751]))}, :name datascript.parser/map->Constant, :variadic false, :file "out/datascript/parser.cljc", :end-column 21, :method-params ([G__9751]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 95, :end-line 95, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__9751]))}, parse-variable {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 103, :column 7, :end-line 103, :end-column 21, :arglists (quote ([form]))}, :name datascript.parser/parse-variable, :variadic false, :file "out/datascript/parser.cljc", :end-column 21, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 103, :end-line 103, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, map->RulesVar {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 94, :column 13, :end-line 94, :end-column 21, :internal-ctor true, :factory :map, :arglists (quote ([G__9740]))}, :name datascript.parser/map->RulesVar, :variadic false, :file "out/datascript/parser.cljc", :end-column 21, :method-params ([G__9740]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 94, :end-line 94, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__9740]))}, -find-vars {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 241, :column 4, :end-line 241, :end-column 14, :protocol datascript.parser/IFindVars, :doc nil, :arglists (quote ([this]))}, :protocol datascript.parser/IFindVars, :name datascript.parser/-find-vars, :variadic false, :file "out/datascript/parser.cljc", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 240, :end-line 241, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc nil}, rule-vars-arity {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 170, :column 7, :end-line 170, :end-column 22, :arglists (quote ([rule-vars]))}, :name datascript.parser/rule-vars-arity, :variadic false, :file "out/datascript/parser.cljc", :end-column 22, :method-params ([rule-vars]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 170, :end-line 170, :max-fixed-arity 1, :fn-var true, :arglists (quote ([rule-vars]))}, parse-find-rel {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 326, :column 7, :end-line 326, :end-column 21, :arglists (quote ([form]))}, :name datascript.parser/parse-find-rel, :variadic false, :file "out/datascript/parser.cljc", :end-column 21, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 326, :end-line 326, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, map->FindScalar {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 262, :column 13, :end-line 262, :end-column 23, :internal-ctor true, :factory :map, :arglists (quote ([G__9874]))}, :name datascript.parser/map->FindScalar, :variadic false, :file "out/datascript/parser.cljc", :end-column 23, :method-params ([G__9874]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 262, :end-line 262, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__9874]))}, ->RuleVars {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 145, :column 13, :end-line 145, :end-column 21, :internal-ctor true, :factory :positional, :arglists (quote ([required free]))}, :name datascript.parser/->RuleVars, :variadic false, :file "out/datascript/parser.cljc", :end-column 21, :method-params ([required free]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 145, :end-line 145, :max-fixed-arity 2, :fn-var true, :arglists (quote ([required free]))}, map->Rule {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 627, :column 13, :end-line 627, :end-column 17, :internal-ctor true, :factory :map, :arglists (quote ([G__10069]))}, :name datascript.parser/map->Rule, :variadic false, :file "out/datascript/parser.cljc", :end-column 17, :method-params ([G__10069]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 627, :end-line 627, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__10069]))}, ->Pattern {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 403, :column 13, :end-line 403, :end-column 20, :internal-ctor true, :factory :positional, :arglists (quote ([source pattern]))}, :name datascript.parser/->Pattern, :variadic false, :file "out/datascript/parser.cljc", :end-column 20, :method-params ([source pattern]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 403, :end-line 403, :max-fixed-arity 2, :fn-var true, :arglists (quote ([source pattern]))}, ITraversable {:meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 16, :column 14, :end-line 16, :end-column 26, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {-collect [[_ pred acc]], -collect-vars [[_ acc]], -postwalk [[_ f]]}}}, :protocol-symbol true, :name datascript.parser/ITraversable, :file "out/datascript/parser.cljc", :end-column 26, :column 1, :line 16, :protocol-info {:methods {-collect [[_ pred acc]], -collect-vars [[_ acc]], -postwalk [[_ f]]}}, :info nil, :end-line 16, :impls #{datascript.parser/RuleVars datascript.parser/PlainSymbol datascript.parser/FindScalar datascript.parser/DefaultSrc datascript.parser/RulesVar datascript.parser/Predicate datascript.parser/SrcVar datascript.parser/RuleExpr datascript.parser/Placeholder datascript.parser/Not datascript.parser/BindColl datascript.parser/Constant datascript.parser/BindIgnore datascript.parser/Function datascript.parser/BindScalar datascript.parser/Rule datascript.parser/Pattern datascript.parser/FindRel datascript.parser/Or datascript.parser/FindTuple datascript.parser/Variable datascript.parser/Query datascript.parser/Pull datascript.parser/FindColl datascript.parser/BindTuple datascript.parser/And datascript.parser/RuleBranch datascript.parser/Aggregate}, :doc nil, :jsdoc ("@interface")}, parse-rule-vars {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 147, :column 7, :end-line 147, :end-column 22, :arglists (quote ([form]))}, :name datascript.parser/parse-rule-vars, :variadic false, :file "out/datascript/parser.cljc", :end-column 22, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 147, :end-line 147, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, parse-seq {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 47, :column 7, :end-line 47, :end-column 16, :arglists (quote ([parse-el form]))}, :name datascript.parser/parse-seq, :variadic false, :file "out/datascript/parser.cljc", :end-column 16, :method-params ([parse-el form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 2, :fn-var true, :arglists (quote ([parse-el form]))}, parse-find {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 356, :column 7, :end-line 356, :end-column 17, :arglists (quote ([form]))}, :name datascript.parser/parse-find, :variadic false, :file "out/datascript/parser.cljc", :end-column 17, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 356, :end-line 356, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, map->RuleBranch {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 626, :column 13, :end-line 626, :end-column 23, :internal-ctor true, :factory :map, :arglists (quote ([G__10058]))}, :name datascript.parser/map->RuleBranch, :variadic false, :file "out/datascript/parser.cljc", :end-column 23, :method-params ([G__10058]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 626, :end-line 626, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__10058]))}, ->RulesVar {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 94, :column 13, :end-line 94, :end-column 21, :internal-ctor true, :factory :positional, :arglists (quote ([]))}, :name datascript.parser/->RulesVar, :variadic false, :file "out/datascript/parser.cljc", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 94, :end-line 94, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, parse-call {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 431, :column 7, :end-line 431, :end-column 17, :arglists (quote ([form]))}, :name datascript.parser/parse-call, :variadic false, :file "out/datascript/parser.cljc", :end-column 17, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 431, :end-line 431, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, source {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 80, :column 7, :end-line 80, :end-column 13, :arglists (quote ([obj]))}, :name datascript.parser/source, :variadic false, :file "out/datascript/parser.cljc", :end-column 13, :method-params ([obj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 80, :end-line 80, :max-fixed-arity 1, :fn-var true, :arglists (quote ([obj]))}, validate-query {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 690, :column 7, :end-line 690, :end-column 21, :arglists (quote ([q form]))}, :name datascript.parser/validate-query, :variadic false, :file "out/datascript/parser.cljc", :end-column 21, :method-params ([q form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 690, :end-line 690, :max-fixed-arity 2, :fn-var true, :arglists (quote ([q form]))}, Aggregate {:num-fields 2, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable datascript.parser/IFindVars cljs.core/IPrintWithWriter cljs.core/IIterable datascript.parser/ITraversable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name datascript.parser/Aggregate, :file "out/datascript/parser.cljc", :end-column 22, :type true, :column 13, :internal-ctor true, :line 247, :record true, :end-line 247, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, with-source {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 77, :column 7, :end-line 77, :end-column 18, :arglists (quote ([obj source]))}, :name datascript.parser/with-source, :variadic false, :file "out/datascript/parser.cljc", :end-column 18, :method-params ([obj source]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 77, :end-line 77, :max-fixed-arity 2, :fn-var true, :arglists (quote ([obj source]))}, ->FindScalar {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 262, :column 13, :end-line 262, :end-column 23, :internal-ctor true, :factory :positional, :arglists (quote ([element]))}, :name datascript.parser/->FindScalar, :variadic false, :file "out/datascript/parser.cljc", :end-column 23, :method-params ([element]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 262, :end-line 262, :max-fixed-arity 1, :fn-var true, :arglists (quote ([element]))}, parse-rules {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 668, :column 7, :end-line 668, :end-column 18, :arglists (quote ([form]))}, :name datascript.parser/parse-rules, :variadic false, :file "out/datascript/parser.cljc", :end-column 18, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 668, :end-line 668, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, of-size? {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 43, :column 7, :end-line 43, :end-column 15, :arglists (quote ([form size]))}, :name datascript.parser/of-size?, :variadic false, :file "out/datascript/parser.cljc", :end-column 15, :method-params ([form size]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 2, :fn-var true, :arglists (quote ([form size]))}, parse-plain-symbol {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 121, :column 7, :end-line 121, :end-column 25, :arglists (quote ([form]))}, :name datascript.parser/parse-plain-symbol, :variadic false, :file "out/datascript/parser.cljc", :end-column 25, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 121, :end-line 121, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, IFindElements {:meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 253, :column 14, :end-line 253, :end-column 27, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {find-elements [[this]]}}}, :protocol-symbol true, :name datascript.parser/IFindElements, :file "out/datascript/parser.cljc", :end-column 27, :column 1, :line 253, :protocol-info {:methods {find-elements [[this]]}}, :info nil, :end-line 253, :impls #{datascript.parser/FindScalar datascript.parser/FindRel datascript.parser/FindTuple datascript.parser/FindColl}, :doc nil, :jsdoc ("@interface")}, parse-pattern {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 423, :column 7, :end-line 423, :end-column 20, :arglists (quote ([form]))}, :name datascript.parser/parse-pattern, :variadic false, :file "out/datascript/parser.cljc", :end-column 20, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 423, :end-line 423, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, query->map {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 682, :column 7, :end-line 682, :end-column 17, :arglists (quote ([query]))}, :name datascript.parser/query->map, :variadic false, :file "out/datascript/parser.cljc", :end-column 17, :method-params ([query]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 682, :end-line 682, :max-fixed-arity 1, :fn-var true, :arglists (quote ([query]))}, parse-bind-rel {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 212, :column 7, :end-line 212, :end-column 21, :arglists (quote ([form]))}, :name datascript.parser/parse-bind-rel, :variadic false, :file "out/datascript/parser.cljc", :end-column 21, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 212, :end-line 212, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, map->BindIgnore {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 180, :column 13, :end-line 180, :end-column 23, :internal-ctor true, :factory :map, :arglists (quote ([G__9786]))}, :name datascript.parser/map->BindIgnore, :variadic false, :file "out/datascript/parser.cljc", :end-column 23, :method-params ([G__9786]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 180, :end-line 180, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__9786]))}, parse-bind-ignore {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 185, :column 7, :end-line 185, :end-column 24, :arglists (quote ([form]))}, :name datascript.parser/parse-bind-ignore, :variadic false, :file "out/datascript/parser.cljc", :end-column 24, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 185, :end-line 185, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, map->Pull {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 250, :column 13, :end-line 250, :end-column 17, :internal-ctor true, :factory :map, :arglists (quote ([G__9841]))}, :name datascript.parser/map->Pull, :variadic false, :file "out/datascript/parser.cljc", :end-column 17, :method-params ([G__9841]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 250, :end-line 250, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__9841]))}, parse-rules-var {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 113, :column 7, :end-line 113, :end-column 22, :arglists (quote ([form]))}, :name datascript.parser/parse-rules-var, :variadic false, :file "out/datascript/parser.cljc", :end-column 22, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 113, :end-line 113, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, parse-in-binding {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 376, :column 8, :end-line 376, :end-column 24, :private true, :arglists (quote ([form]))}, :private true, :name datascript.parser/parse-in-binding, :variadic false, :file "out/datascript/parser.cljc", :end-column 24, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 376, :end-line 376, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, map->BindColl {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 183, :column 13, :end-line 183, :end-column 21, :internal-ctor true, :factory :map, :arglists (quote ([G__9819]))}, :name datascript.parser/map->BindColl, :variadic false, :file "out/datascript/parser.cljc", :end-column 21, :method-params ([G__9819]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 183, :end-line 183, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__9819]))}, BindColl {:num-fields 1, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable datascript.parser/ITraversable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name datascript.parser/BindColl, :file "out/datascript/parser.cljc", :end-column 21, :type true, :column 13, :internal-ctor true, :line 183, :record true, :end-line 183, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, parse-plain-variable {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 129, :column 7, :end-line 129, :end-column 27, :arglists (quote ([form]))}, :name datascript.parser/parse-plain-variable, :variadic false, :file "out/datascript/parser.cljc", :end-column 27, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 129, :end-line 129, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, ->SrcVar {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 92, :column 13, :end-line 92, :end-column 19, :internal-ctor true, :factory :positional, :arglists (quote ([symbol]))}, :name datascript.parser/->SrcVar, :variadic false, :file "out/datascript/parser.cljc", :end-column 19, :method-params ([symbol]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 92, :end-line 92, :max-fixed-arity 1, :fn-var true, :arglists (quote ([symbol]))}, ->Pull {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 250, :column 13, :end-line 250, :end-column 17, :internal-ctor true, :factory :positional, :arglists (quote ([source variable pattern]))}, :name datascript.parser/->Pull, :variadic false, :file "out/datascript/parser.cljc", :end-column 17, :method-params ([source variable pattern]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 250, :end-line 250, :max-fixed-arity 3, :fn-var true, :arglists (quote ([source variable pattern]))}, RuleVars {:num-fields 2, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable datascript.parser/ITraversable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name datascript.parser/RuleVars, :file "out/datascript/parser.cljc", :end-column 21, :type true, :column 13, :internal-ctor true, :line 145, :record true, :end-line 145, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, parse-find-tuple {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 348, :column 7, :end-line 348, :end-column 23, :arglists (quote ([form]))}, :name datascript.parser/parse-find-tuple, :variadic false, :file "out/datascript/parser.cljc", :end-column 23, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 348, :end-line 348, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, parse-find-scalar {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 341, :column 7, :end-line 341, :end-column 24, :arglists (quote ([form]))}, :name datascript.parser/parse-find-scalar, :variadic false, :file "out/datascript/parser.cljc", :end-column 24, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 341, :end-line 341, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, distinct? {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 63, :column 7, :end-line 63, :end-column 16, :arglists (quote ([coll]))}, :name datascript.parser/distinct?, :variadic false, :file "out/datascript/parser.cljc", :end-column 16, :method-params ([coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 1, :fn-var true, :arglists (quote ([coll]))}, ->BindColl {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 183, :column 13, :end-line 183, :end-column 21, :internal-ctor true, :factory :positional, :arglists (quote ([binding]))}, :name datascript.parser/->BindColl, :variadic false, :file "out/datascript/parser.cljc", :end-column 21, :method-params ([binding]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 183, :end-line 183, :max-fixed-arity 1, :fn-var true, :arglists (quote ([binding]))}, ->RuleExpr {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 406, :column 13, :end-line 406, :end-column 21, :internal-ctor true, :factory :positional, :arglists (quote ([source name args]))}, :name datascript.parser/->RuleExpr, :variadic false, :file "out/datascript/parser.cljc", :end-column 21, :method-params ([source name args]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 406, :end-line 406, :max-fixed-arity 3, :fn-var true, :arglists (quote ([source name args]))}, BindScalar {:num-fields 1, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable datascript.parser/ITraversable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name datascript.parser/BindScalar, :file "out/datascript/parser.cljc", :end-column 23, :type true, :column 13, :internal-ctor true, :line 181, :record true, :end-line 181, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->Variable {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 91, :column 13, :end-line 91, :end-column 21, :internal-ctor true, :factory :positional, :arglists (quote ([symbol]))}, :name datascript.parser/->Variable, :variadic false, :file "out/datascript/parser.cljc", :end-column 21, :method-params ([symbol]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 91, :end-line 91, :max-fixed-arity 1, :fn-var true, :arglists (quote ([symbol]))}, map->SrcVar {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 92, :column 13, :end-line 92, :end-column 19, :internal-ctor true, :factory :map, :arglists (quote ([G__9718]))}, :name datascript.parser/map->SrcVar, :variadic false, :file "out/datascript/parser.cljc", :end-column 19, :method-params ([G__9718]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 92, :end-line 92, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__9718]))}, ->FindRel {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 256, :column 13, :end-line 256, :end-column 20, :internal-ctor true, :factory :positional, :arglists (quote ([elements]))}, :name datascript.parser/->FindRel, :variadic false, :file "out/datascript/parser.cljc", :end-column 20, :method-params ([elements]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 256, :end-line 256, :max-fixed-arity 1, :fn-var true, :arglists (quote ([elements]))}, PlainSymbol {:num-fields 1, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable datascript.parser/ITraversable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name datascript.parser/PlainSymbol, :file "out/datascript/parser.cljc", :end-column 24, :type true, :column 13, :internal-ctor true, :line 96, :record true, :end-line 96, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, collect {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 54, :column 7, :end-line 54, :end-column 14, :arglists (quote ([pred form] [pred form acc])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([pred form] [pred form acc]), :arglists ([pred form] [pred form acc]), :arglists-meta (nil nil)}}, :name datascript.parser/collect, :variadic false, :file "out/datascript/parser.cljc", :end-column 14, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([pred form] [pred form acc]), :arglists ([pred form] [pred form acc]), :arglists-meta (nil nil)}, :method-params ([pred form] [pred form acc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 3, :fn-var true, :arglists ([pred form] [pred form acc])}, map->Placeholder {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 90, :column 13, :end-line 90, :end-column 24, :internal-ctor true, :factory :map, :arglists (quote ([G__9696]))}, :name datascript.parser/map->Placeholder, :variadic false, :file "out/datascript/parser.cljc", :end-column 24, :method-params ([G__9696]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 90, :end-line 90, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__9696]))}, parse-src-var {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 108, :column 7, :end-line 108, :end-column 20, :arglists (quote ([form]))}, :name datascript.parser/parse-src-var, :variadic false, :file "out/datascript/parser.cljc", :end-column 20, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 108, :end-line 108, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, parse-bind-coll {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 193, :column 7, :end-line 193, :end-column 22, :arglists (quote ([form]))}, :name datascript.parser/parse-bind-coll, :variadic false, :file "out/datascript/parser.cljc", :end-column 22, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 193, :end-line 193, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, Pattern {:num-fields 2, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable datascript.parser/ITraversable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name datascript.parser/Pattern, :file "out/datascript/parser.cljc", :end-column 20, :type true, :column 13, :internal-ctor true, :line 403, :record true, :end-line 403, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->Constant {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 95, :column 13, :end-line 95, :end-column 21, :internal-ctor true, :factory :positional, :arglists (quote ([value]))}, :name datascript.parser/->Constant, :variadic false, :file "out/datascript/parser.cljc", :end-column 21, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 95, :end-line 95, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, ->FindColl {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 259, :column 13, :end-line 259, :end-column 21, :internal-ctor true, :factory :positional, :arglists (quote ([element]))}, :name datascript.parser/->FindColl, :variadic false, :file "out/datascript/parser.cljc", :end-column 21, :method-params ([element]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 259, :end-line 259, :max-fixed-arity 1, :fn-var true, :arglists (quote ([element]))}, FindRel {:num-fields 1, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable datascript.parser/ITraversable cljs.core/IWithMeta cljs.core/IAssociative datascript.parser/IFindElements cljs.core/IMap cljs.core/ILookup}, :name datascript.parser/FindRel, :file "out/datascript/parser.cljc", :end-column 20, :type true, :column 13, :internal-ctor true, :line 256, :record true, :end-line 256, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, FindScalar {:num-fields 1, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable datascript.parser/ITraversable cljs.core/IWithMeta cljs.core/IAssociative datascript.parser/IFindElements cljs.core/IMap cljs.core/ILookup}, :name datascript.parser/FindScalar, :file "out/datascript/parser.cljc", :end-column 23, :type true, :column 13, :internal-ctor true, :line 262, :record true, :end-line 262, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, map->FindColl {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 259, :column 13, :end-line 259, :end-column 21, :internal-ctor true, :factory :map, :arglists (quote ([G__9863]))}, :name datascript.parser/map->FindColl, :variadic false, :file "out/datascript/parser.cljc", :end-column 21, :method-params ([G__9863]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 259, :end-line 259, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__9863]))}, ->BindScalar {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 181, :column 13, :end-line 181, :end-column 23, :internal-ctor true, :factory :positional, :arglists (quote ([variable]))}, :name datascript.parser/->BindScalar, :variadic false, :file "out/datascript/parser.cljc", :end-column 23, :method-params ([variable]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 181, :end-line 181, :max-fixed-arity 1, :fn-var true, :arglists (quote ([variable]))}, ->RuleBranch {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 626, :column 13, :end-line 626, :end-column 23, :internal-ctor true, :factory :positional, :arglists (quote ([vars clauses]))}, :name datascript.parser/->RuleBranch, :variadic false, :file "out/datascript/parser.cljc", :end-column 23, :method-params ([vars clauses]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 626, :end-line 626, :max-fixed-arity 2, :fn-var true, :arglists (quote ([vars clauses]))}, parse-aggregate {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 278, :column 7, :end-line 278, :end-column 22, :arglists (quote ([form]))}, :name datascript.parser/parse-aggregate, :variadic false, :file "out/datascript/parser.cljc", :end-column 22, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 278, :end-line 278, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, collect-vars-acc {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 472, :column 8, :end-line 472, :end-column 24, :private true, :arglists (quote ([acc form]))}, :private true, :name datascript.parser/collect-vars-acc, :variadic false, :file "out/datascript/parser.cljc", :end-column 24, :method-params ([acc form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 472, :end-line 472, :max-fixed-arity 2, :fn-var true, :arglists (quote ([acc form]))}, RulesVar {:num-fields 0, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable datascript.parser/ITraversable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name datascript.parser/RulesVar, :file "out/datascript/parser.cljc", :end-column 21, :type true, :column 13, :internal-ctor true, :line 94, :record true, :end-line 94, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, Variable {:num-fields 1, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable datascript.parser/ITraversable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name datascript.parser/Variable, :file "out/datascript/parser.cljc", :end-column 21, :type true, :column 13, :internal-ctor true, :line 91, :record true, :end-line 91, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, Query {:num-fields 4, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable datascript.parser/ITraversable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name datascript.parser/Query, :file "out/datascript/parser.cljc", :end-column 18, :type true, :column 13, :internal-ctor true, :line 680, :record true, :end-line 680, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->BindTuple {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 182, :column 13, :end-line 182, :end-column 22, :internal-ctor true, :factory :positional, :arglists (quote ([bindings]))}, :name datascript.parser/->BindTuple, :variadic false, :file "out/datascript/parser.cljc", :end-column 22, :method-params ([bindings]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 182, :end-line 182, :max-fixed-arity 1, :fn-var true, :arglists (quote ([bindings]))}, parse-clause {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 600, :column 7, :end-line 600, :end-column 19, :arglists (quote ([form]))}, :name datascript.parser/parse-clause, :variadic false, :file "out/datascript/parser.cljc", :end-column 19, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 600, :end-line 600, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, RuleExpr {:num-fields 3, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable datascript.parser/ITraversable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name datascript.parser/RuleExpr, :file "out/datascript/parser.cljc", :end-column 21, :type true, :column 13, :internal-ctor true, :line 406, :record true, :end-line 406, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, parse-or {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 547, :column 7, :end-line 547, :end-column 15, :arglists (quote ([form]))}, :name datascript.parser/parse-or, :variadic false, :file "out/datascript/parser.cljc", :end-column 15, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 547, :end-line 547, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, parse-with {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 367, :column 7, :end-line 367, :end-column 17, :arglists (quote ([form]))}, :name datascript.parser/parse-with, :variadic false, :file "out/datascript/parser.cljc", :end-column 17, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 367, :end-line 367, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, parse-tuple-el {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/parser.cljc", :line 201, :column 7, :end-line 201, :end-column 21, :arglists (quote ([form]))}, :name datascript.parser/parse-tuple-el, :variadic false, :file "out/datascript/parser.cljc", :end-column 21, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 201, :end-line 201, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}}, :require-macros {datascript.parser datascript.parser, db datascript.db, datascript.db datascript.db}, :cljs.analyzer/constants {:seen #{:args :parser/in :find clauses :parser/find aggregate pull :where :fn :variable :element required :parser/where :else in vars pattern :parser/rule-vars find args :fragment :rule-vars :free :bindings :symbol :name :rule :value :parser/rule where variable fn :branches element or-join :source _ % :elements bindings symbol rule-vars free value or name :binding :parser/with branches not $ :with source not-join elements binding :error :parser/binding :clauses :form . with ... :required and :in :vars :pattern :parser/query}, :order [:else :source :symbol symbol :value value _ % :required :free required free :error :form :parser/rule-vars :variable variable :bindings bindings :binding binding ... :parser/binding :fn :args fn args :pattern source pattern :elements elements :element element aggregate :fragment :parser/find pull $ . :parser/with :parser/in :name name :vars :clauses vars clauses :rule-vars rule-vars :parser/where not not-join and or or-join :branches branches :parser/rule :rule :find :with :in :where find with in where :parser/query]}, :doc nil}