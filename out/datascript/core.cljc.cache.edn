;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{filter}, :name datascript.core, :imports nil, :requires {datascript.query datascript.query, btset datascript.btset, db datascript.db, datascript.btset datascript.btset, dq datascript.query, datascript.db datascript.db, datascript.pull-api datascript.pull-api, de datascript.impl.entity, dp datascript.pull-api, datascript.impl.entity datascript.impl.entity}, :uses {FilteredDB datascript.db}, :defs {->t_datascript$core11096 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IDerefWithTimeout cljs.core/IPending cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IDerefWithTimeout cljs.core/IPending cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([future-call f res realized meta11097])), :file nil}, :protocols #{cljs.core/IDerefWithTimeout cljs.core/IPending cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}, :name datascript.core/->t_datascript$core11096, :variadic false, :file "out/datascript/core.cljc", :method-params ([future-call f res realized meta11097]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 8, :factory :positional, :line 230, :max-fixed-arity 5, :fn-var true, :arglists (quote ([future-call f res realized meta11097])), :skip-protocol-flag #{cljs.core/IDerefWithTimeout cljs.core/IPending cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}}, ->t_datascript$core11089 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IDerefWithTimeout cljs.core/IPending cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IDerefWithTimeout cljs.core/IPending cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([conn tx-data tx-meta res meta11090])), :file nil}, :protocols #{cljs.core/IDerefWithTimeout cljs.core/IPending cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}, :name datascript.core/->t_datascript$core11089, :variadic false, :file "out/datascript/core.cljc", :method-params ([conn tx-data tx-meta res meta11090]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 10, :factory :positional, :line 208, :max-fixed-arity 5, :fn-var true, :arglists (quote ([conn tx-data tx-meta res meta11090])), :skip-protocol-flag #{cljs.core/IDerefWithTimeout cljs.core/IPending cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}}, pull {:name datascript.core/pull, :file "out/datascript/core.cljc", :line 31, :column 1, :end-line 31, :end-column 22, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/core.cljc", :line 31, :column 18, :end-line 31, :end-column 22}}, listen! {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/core.cljc", :line 154, :column 7, :end-line 154, :end-column 14, :arglists (quote ([conn callback] [conn key callback])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([conn callback] [conn key callback]), :arglists ([conn callback] [conn key callback]), :arglists-meta (nil nil)}}, :name datascript.core/listen!, :variadic false, :file "out/datascript/core.cljc", :end-column 14, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([conn callback] [conn key callback]), :arglists ([conn callback] [conn key callback]), :arglists-meta (nil nil)}, :method-params ([conn callback] [conn key callback]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 154, :end-line 154, :max-fixed-arity 3, :fn-var true, :arglists ([conn callback] [conn key callback])}, conn-from-datoms {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/core.cljc", :line 113, :column 7, :end-line 113, :end-column 23, :arglists (quote ([datoms] [datoms schema])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([datoms] [datoms schema]), :arglists ([datoms] [datoms schema]), :arglists-meta (nil nil)}}, :name datascript.core/conn-from-datoms, :variadic false, :file "out/datascript/core.cljc", :end-column 23, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([datoms] [datoms schema]), :arglists ([datoms] [datoms schema]), :arglists-meta (nil nil)}, :method-params ([datoms] [datoms schema]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 113, :end-line 113, :max-fixed-arity 2, :fn-var true, :arglists ([datoms] [datoms schema])}, future-call {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/core.cljc", :line 226, :column 11, :end-line 226, :end-column 22, :private true, :arglists (quote ([f]))}, :private true, :name datascript.core/future-call, :variadic false, :file "out/datascript/core.cljc", :end-column 22, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 4, :line 226, :end-line 226, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f]))}, entity {:name datascript.core/entity, :file "out/datascript/core.cljc", :line 21, :column 1, :end-line 21, :end-column 24, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/core.cljc", :line 21, :column 18, :end-line 21, :end-column 24}}, conn-from-db {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/core.cljc", :line 110, :column 7, :end-line 110, :end-column 19, :arglists (quote ([db]))}, :name datascript.core/conn-from-db, :variadic false, :file "out/datascript/core.cljc", :end-column 19, :method-params ([db]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 110, :end-line 110, :max-fixed-arity 1, :fn-var true, :arglists (quote ([db]))}, to-hex-string {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/core.cljc", :line 248, :column 10, :end-line 248, :end-column 23, :private true, :arglists (quote ([n l]))}, :private true, :name datascript.core/to-hex-string, :variadic false, :file "out/datascript/core.cljc", :end-column 23, :method-params ([n l]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 248, :end-line 248, :max-fixed-arity 2, :fn-var true, :arglists (quote ([n l]))}, datoms {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/core.cljc", :line 82, :column 7, :end-line 82, :end-column 13, :arglists (quote ([db index] [db index c1] [db index c1 c2] [db index c1 c2 c3] [db index c1 c2 c3 c4])), :top-fn {:variadic false, :max-fixed-arity 6, :method-params ([db index] [db index c1] [db index c1 c2] [db index c1 c2 c3] [db index c1 c2 c3 c4]), :arglists ([db index] [db index c1] [db index c1 c2] [db index c1 c2 c3] [db index c1 c2 c3 c4]), :arglists-meta (nil nil nil nil nil)}}, :name datascript.core/datoms, :variadic false, :file "out/datascript/core.cljc", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 6, :method-params ([db index] [db index c1] [db index c1 c2] [db index c1 c2 c3] [db index c1 c2 c3 c4]), :arglists ([db index] [db index c1] [db index c1 c2] [db index c1 c2 c3] [db index c1 c2 c3 c4]), :arglists-meta (nil nil nil nil nil)}, :method-params ([db index] [db index c1] [db index c1 c2] [db index c1 c2 c3] [db index c1 c2 c3 c4]), :protocol-impl nil, :arglists-meta (nil nil nil nil nil), :column 1, :line 82, :end-line 82, :max-fixed-arity 6, :fn-var true, :arglists ([db index] [db index c1] [db index c1 c2] [db index c1 c2 c3] [db index c1 c2 c3 c4])}, t_datascript$core11089 {:num-fields 5, :protocols #{cljs.core/IDerefWithTimeout cljs.core/IPending cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}, :name datascript.core/t_datascript$core11089, :file "out/datascript/core.cljc", :type true, :anonymous true, :column 10, :line 208, :record false, :skip-protocol-flag #{cljs.core/IDerefWithTimeout cljs.core/IPending cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}}, init-db {:name datascript.core/init-db, :file "out/datascript/core.cljc", :line 43, :column 1, :end-line 43, :end-column 25, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/core.cljc", :line 43, :column 18, :end-line 43, :end-column 25}}, is-filtered {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/core.cljc", :line 53, :column 7, :end-line 53, :end-column 18, :arglists (quote ([x]))}, :name datascript.core/is-filtered, :variadic false, :file "out/datascript/core.cljc", :end-column 18, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, ->t_datascript$core11099 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IDerefWithTimeout cljs.core/IPending cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IDerefWithTimeout cljs.core/IPending cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([future-call f res realized meta11100])), :file nil}, :protocols #{cljs.core/IDerefWithTimeout cljs.core/IPending cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}, :name datascript.core/->t_datascript$core11099, :variadic false, :file "out/datascript/core.cljc", :method-params ([future-call f res realized meta11100]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 8, :factory :positional, :line 230, :max-fixed-arity 5, :fn-var true, :arglists (quote ([future-call f res realized meta11100])), :skip-protocol-flag #{cljs.core/IDerefWithTimeout cljs.core/IPending cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}}, q {:name datascript.core/q, :file "out/datascript/core.cljc", :line 18, :column 1, :end-line 18, :end-column 19, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/core.cljc", :line 18, :column 18, :end-line 18, :end-column 19}}, index-range {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/core.cljc", :line 96, :column 7, :end-line 96, :end-column 18, :arglists (quote ([db attr start end]))}, :name datascript.core/index-range, :variadic false, :file "out/datascript/core.cljc", :end-column 18, :method-params ([db attr start end]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 4, :fn-var true, :arglists (quote ([db attr start end]))}, pull-many {:name datascript.core/pull-many, :file "out/datascript/core.cljc", :line 34, :column 1, :end-line 34, :end-column 27, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/core.cljc", :line 34, :column 18, :end-line 34, :end-column 27}}, squuid {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/core.cljc", :line 256, :column 7, :end-line 256, :end-column 13, :arglists (quote ([] [msec])), :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [msec]), :arglists ([] [msec]), :arglists-meta (nil nil)}}, :name datascript.core/squuid, :variadic false, :file "out/datascript/core.cljc", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [msec]), :arglists ([] [msec]), :arglists-meta (nil nil)}, :method-params ([] [msec]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 256, :end-line 256, :max-fixed-arity 1, :fn-var true, :arglists ([] [msec])}, db? {:name datascript.core/db?, :file "out/datascript/core.cljc", :line 49, :column 1, :end-line 49, :end-column 21, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/core.cljc", :line 49, :column 18, :end-line 49, :end-column 21}}, create-conn {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/core.cljc", :line 117, :column 7, :end-line 117, :end-column 18, :arglists (quote ([] [schema])), :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [schema]), :arglists ([] [schema]), :arglists-meta (nil nil)}}, :name datascript.core/create-conn, :variadic false, :file "out/datascript/core.cljc", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [schema]), :arglists ([] [schema]), :arglists-meta (nil nil)}, :method-params ([] [schema]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 117, :end-line 117, :max-fixed-arity 1, :fn-var true, :arglists ([] [schema])}, squuid-time-millis {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/core.cljc", :line 281, :column 7, :end-line 281, :end-column 25, :arglists (quote ([uuid]))}, :name datascript.core/squuid-time-millis, :variadic false, :file "out/datascript/core.cljc", :end-column 25, :method-params ([uuid]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 281, :end-line 281, :max-fixed-arity 1, :fn-var true, :arglists (quote ([uuid]))}, datom {:name datascript.core/datom, :file "out/datascript/core.cljc", :line 28, :column 1, :end-line 28, :end-column 23, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/core.cljc", :line 28, :column 18, :end-line 28, :end-column 23}}, entity-db {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/core.cljc", :line 23, :column 7, :end-line 23, :end-column 16, :arglists (quote ([entity]))}, :name datascript.core/entity-db, :variadic false, :file "out/datascript/core.cljc", :end-column 16, :method-params ([entity]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists (quote ([entity]))}, db {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/core.cljc", :line 198, :column 7, :end-line 198, :end-column 9, :arglists (quote ([conn]))}, :name datascript.core/db, :variadic false, :file "out/datascript/core.cljc", :end-column 9, :method-params ([conn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 198, :end-line 198, :max-fixed-arity 1, :fn-var true, :arglists (quote ([conn]))}, transact-async {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/core.cljc", :line 238, :column 7, :end-line 238, :end-column 21, :arglists (quote ([conn tx-data] [conn tx-data tx-meta])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([conn tx-data] [conn tx-data tx-meta]), :arglists ([conn tx-data] [conn tx-data tx-meta]), :arglists-meta (nil nil)}}, :name datascript.core/transact-async, :variadic false, :file "out/datascript/core.cljc", :end-column 21, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([conn tx-data] [conn tx-data tx-meta]), :arglists ([conn tx-data] [conn tx-data tx-meta]), :arglists-meta (nil nil)}, :method-params ([conn tx-data] [conn tx-data tx-meta]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 238, :end-line 238, :max-fixed-arity 3, :fn-var true, :arglists ([conn tx-data] [conn tx-data tx-meta])}, data-readers {:name datascript.core/data-readers, :file "out/datascript/core.cljc", :line 174, :column 1, :end-line 174, :end-column 18, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/core.cljc", :line 174, :column 6, :end-line 174, :end-column 18}}, tx0 {:name datascript.core/tx0, :file "out/datascript/core.cljc", :line 51, :column 1, :end-line 51, :end-column 17, :const true, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/core.cljc", :line 51, :column 14, :end-line 51, :end-column 17, :const true}}, t_datascript$core11096 {:num-fields 5, :protocols #{cljs.core/IDerefWithTimeout cljs.core/IPending cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}, :name datascript.core/t_datascript$core11096, :file "out/datascript/core.cljc", :type true, :anonymous true, :column 8, :line 230, :record false, :skip-protocol-flag #{cljs.core/IDerefWithTimeout cljs.core/IPending cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}}, resolve-tempid {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/core.cljc", :line 195, :column 7, :end-line 195, :end-column 21, :arglists (quote ([_db tempids tempid]))}, :name datascript.core/resolve-tempid, :variadic false, :file "out/datascript/core.cljc", :end-column 21, :method-params ([_db tempids tempid]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 195, :end-line 195, :max-fixed-arity 3, :fn-var true, :arglists (quote ([_db tempids tempid]))}, empty-db {:name datascript.core/empty-db, :file "out/datascript/core.cljc", :line 40, :column 1, :end-line 40, :end-column 26, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/core.cljc", :line 40, :column 18, :end-line 40, :end-column 26}}, datom? {:name datascript.core/datom?, :file "out/datascript/core.cljc", :line 46, :column 1, :end-line 46, :end-column 24, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/core.cljc", :line 46, :column 18, :end-line 46, :end-column 24}}, transact! {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/core.cljc", :line 130, :column 7, :end-line 130, :end-column 16, :arglists (quote ([conn tx-data] [conn tx-data tx-meta])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([conn tx-data] [conn tx-data tx-meta]), :arglists ([conn tx-data] [conn tx-data tx-meta]), :arglists-meta (nil nil)}}, :name datascript.core/transact!, :variadic false, :file "out/datascript/core.cljc", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([conn tx-data] [conn tx-data tx-meta]), :arglists ([conn tx-data] [conn tx-data tx-meta]), :arglists-meta (nil nil)}, :method-params ([conn tx-data] [conn tx-data tx-meta]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 130, :end-line 130, :max-fixed-arity 3, :fn-var true, :arglists ([conn tx-data] [conn tx-data tx-meta])}, t_datascript$core11099 {:num-fields 5, :protocols #{cljs.core/IDerefWithTimeout cljs.core/IPending cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}, :name datascript.core/t_datascript$core11099, :file "out/datascript/core.cljc", :type true, :anonymous true, :column 8, :line 230, :record false, :skip-protocol-flag #{cljs.core/IDerefWithTimeout cljs.core/IPending cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}}, transact {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/core.cljc", :line 202, :column 7, :end-line 202, :end-column 15, :arglists (quote ([conn tx-data] [conn tx-data tx-meta])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([conn tx-data] [conn tx-data tx-meta]), :arglists ([conn tx-data] [conn tx-data tx-meta]), :arglists-meta (nil nil)}}, :name datascript.core/transact, :variadic false, :file "out/datascript/core.cljc", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([conn tx-data] [conn tx-data tx-meta]), :arglists ([conn tx-data] [conn tx-data tx-meta]), :arglists-meta (nil nil)}, :method-params ([conn tx-data] [conn tx-data tx-meta]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 202, :end-line 202, :max-fixed-arity 3, :fn-var true, :arglists ([conn tx-data] [conn tx-data tx-meta])}, seek-datoms {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/core.cljc", :line 89, :column 7, :end-line 89, :end-column 18, :arglists (quote ([db index] [db index c1] [db index c1 c2] [db index c1 c2 c3] [db index c1 c2 c3 c4])), :top-fn {:variadic false, :max-fixed-arity 6, :method-params ([db index] [db index c1] [db index c1 c2] [db index c1 c2 c3] [db index c1 c2 c3 c4]), :arglists ([db index] [db index c1] [db index c1 c2] [db index c1 c2 c3] [db index c1 c2 c3 c4]), :arglists-meta (nil nil nil nil nil)}}, :name datascript.core/seek-datoms, :variadic false, :file "out/datascript/core.cljc", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 6, :method-params ([db index] [db index c1] [db index c1 c2] [db index c1 c2 c3] [db index c1 c2 c3 c4]), :arglists ([db index] [db index c1] [db index c1 c2] [db index c1 c2 c3] [db index c1 c2 c3 c4]), :arglists-meta (nil nil nil nil nil)}, :method-params ([db index] [db index c1] [db index c1 c2] [db index c1 c2 c3] [db index c1 c2 c3 c4]), :protocol-impl nil, :arglists-meta (nil nil nil nil nil), :column 1, :line 89, :end-line 89, :max-fixed-arity 6, :fn-var true, :arglists ([db index] [db index c1] [db index c1 c2] [db index c1 c2 c3] [db index c1 c2 c3 c4])}, filter {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/core.cljc", :line 56, :column 7, :end-line 56, :end-column 13, :arglists (quote ([db pred]))}, :name datascript.core/filter, :variadic false, :file "out/datascript/core.cljc", :end-column 13, :method-params ([db pred]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db pred]))}, last-tempid {:name datascript.core/last-tempid, :file "out/datascript/core.cljc", :line 183, :column 1, :end-line 183, :end-column 27, :private true, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/core.cljc", :line 183, :column 16, :end-line 183, :end-column 27, :private true}}, rand-bits {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/core.cljc", :line 244, :column 8, :end-line 244, :end-column 17, :private true, :arglists (quote ([pow]))}, :private true, :name datascript.core/rand-bits, :variadic false, :file "out/datascript/core.cljc", :end-column 17, :method-params ([pow]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 244, :end-line 244, :max-fixed-arity 1, :fn-var true, :arglists (quote ([pow]))}, db-with {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/core.cljc", :line 78, :column 7, :end-line 78, :end-column 14, :arglists (quote ([db tx-data]))}, :name datascript.core/db-with, :variadic false, :file "out/datascript/core.cljc", :end-column 14, :method-params ([db tx-data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 78, :end-line 78, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db tx-data]))}, conn? {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/core.cljc", :line 105, :column 7, :end-line 105, :end-column 12, :arglists (quote ([conn]))}, :name datascript.core/conn?, :variadic false, :file "out/datascript/core.cljc", :end-column 12, :method-params ([conn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 105, :end-line 105, :max-fixed-arity 1, :fn-var true, :arglists (quote ([conn]))}, unlisten! {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/core.cljc", :line 161, :column 7, :end-line 161, :end-column 16, :arglists (quote ([conn key]))}, :name datascript.core/unlisten!, :variadic false, :file "out/datascript/core.cljc", :end-column 16, :method-params ([conn key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 161, :end-line 161, :max-fixed-arity 2, :fn-var true, :arglists (quote ([conn key]))}, with {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/core.cljc", :line 65, :column 7, :end-line 65, :end-column 11, :arglists (quote ([db tx-data] [db tx-data tx-meta])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([db tx-data] [db tx-data tx-meta]), :arglists ([db tx-data] [db tx-data tx-meta]), :arglists-meta (nil nil)}}, :name datascript.core/with, :variadic false, :file "out/datascript/core.cljc", :end-column 11, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([db tx-data] [db tx-data tx-meta]), :arglists ([db tx-data] [db tx-data tx-meta]), :arglists-meta (nil nil)}, :method-params ([db tx-data] [db tx-data tx-meta]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 65, :end-line 65, :max-fixed-arity 3, :fn-var true, :arglists ([db tx-data] [db tx-data tx-meta])}, touch {:name datascript.core/touch, :file "out/datascript/core.cljc", :line 37, :column 1, :end-line 37, :end-column 23, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/core.cljc", :line 37, :column 18, :end-line 37, :end-column 23}}, reset-conn! {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/core.cljc", :line 139, :column 7, :end-line 139, :end-column 18, :arglists (quote ([conn db] [conn db tx-meta])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([conn db] [conn db tx-meta]), :arglists ([conn db] [conn db tx-meta]), :arglists-meta (nil nil)}}, :name datascript.core/reset-conn!, :variadic false, :file "out/datascript/core.cljc", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([conn db] [conn db tx-meta]), :arglists ([conn db] [conn db tx-meta]), :arglists-meta (nil nil)}, :method-params ([conn db] [conn db tx-meta]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 139, :end-line 139, :max-fixed-arity 3, :fn-var true, :arglists ([conn db] [conn db tx-meta])}, entid {:name datascript.core/entid, :file "out/datascript/core.cljc", :line 101, :column 1, :end-line 101, :end-column 23, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/core.cljc", :line 101, :column 18, :end-line 101, :end-column 23}}, tempid {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/core.cljc", :line 185, :column 7, :end-line 185, :end-column 13, :arglists (quote ([part] [part x])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([part] [part x]), :arglists ([part] [part x]), :arglists-meta (nil nil)}}, :name datascript.core/tempid, :variadic false, :file "out/datascript/core.cljc", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([part] [part x]), :arglists ([part] [part x]), :arglists-meta (nil nil)}, :method-params ([part] [part x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 185, :end-line 185, :max-fixed-arity 2, :fn-var true, :arglists ([part] [part x])}, -transact! {:protocol-inline nil, :meta {:file "/home/akash/workspace/alias-manager/out/datascript/core.cljc", :line 121, :column 7, :end-line 121, :end-column 17, :arglists (quote ([conn tx-data tx-meta]))}, :name datascript.core/-transact!, :variadic false, :file "out/datascript/core.cljc", :end-column 17, :method-params ([conn tx-data tx-meta]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 121, :end-line 121, :max-fixed-arity 3, :fn-var true, :arglists (quote ([conn tx-data tx-meta]))}}, :require-macros {db datascript.db, datascript.db datascript.db, btset datascript.btset, datascript.btset datascript.btset}, :cljs.analyzer/constants {:seen #{res tx-meta :tempids future-call entity :meta :private conn :else meta11100 :db-after :added db/db? meta11097 realized :transaction/filtered db :eavt datascript/Datom :db-before :tx-data de/entity? :db.part/tx :db/current-tx datascript/DB :error tx-data meta11090 quote :tx-meta conn? :arglists :listeners f}, :order [de/entity? entity db/db? db :error :transaction/filtered :db-before :db-after :tx-data :tempids :tx-meta :meta :listeners conn? conn :added :eavt datascript/Datom datascript/DB :db.part/tx :db/current-tx tx-data tx-meta res meta11090 future-call :private :arglists quote f realized meta11097 meta11100 :else]}, :doc nil}